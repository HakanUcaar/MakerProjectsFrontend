{"version":3,"sources":["Models/SerialPortConstants.jsx","Gifs/1.gif","Gifs/2.gif","Gifs/3.gif","Gifs/4.gif","Gifs/5.gif","Gifs/6.gif","Gifs/7.gif","Gifs/8.gif","Gifs/9.gif","Gifs/10.gif","Gifs/11.gif","Gifs/12.gif","Gifs/13.gif","Arduino.js","serviceWorker.js","Models/ArduinoMachineModel.jsx","Models/GifbuModel.jsx","Redux/ReduxReducer.jsx","Redux/ReduxActionContants.jsx","Redux/ReduxStore.jsx","Redux/ReduxActions.jsx","Components/GifDesktopWindow.jsx","Components/GifList.jsx","ArduinoSvgIconComponent/ArduinoIcon.jsx","Components/ArduinoSettingDialog.jsx","Components/Main.jsx","App.js","ViewManager.js","index.js"],"names":["module","exports","COM1","COM2","COM3","COM4","COM5","COM6","None","Odd","Even","Mark","Space","edge","window","require","isDev","path","fs","ArduinoConnect","func","assemblyFile","typeName","methodName","JsonPath","join","process","execPath","ConnectArduino","a","async","existsSync","error","result","console","log","Boolean","location","hostname","match","ArduinoMachine","Id","uuidv4","PortName","ComPorts","toString","BaudRate","Parity","Paritys","this","Gifbu","Message","ImagePath","Machine","saveGifbu","state","writeFileSync","JSON","stringify","initialState","SelectedGifImage","rootReducer","action","type","payload","GifbuJsondata","parse","readFileSync","encoding","flag","store","createStore","selectedGifImage","updateGifbuData","readGifbuData","saveGifbuData","GifDesktopWindow","componentDidMount","props","classes","GifBu","className","imageIcon","gifImage","src","Component","GifDesktopWindowComponent","withStyles","lvl1","display","lvl2","flexGrow","maxWidth","overflowX","lvl3","overflow","transition","minHeight","paper","margin","width","height","position","left","top","transform","fab","connect","dispatch","useStyles","root","marginTop","gridList","paddingTop","gridListTile","border","createMuiTheme","palette","primary","main","zIndex","opacity","appBar","dialog","tileData","img","image1","title","author","image2","image3","image4","image5","image6","image7","image8","image9","image10","image11","image12","image13","GifList","onClickImage","e","target","close","open","Dialog","fullScreen","gifListOpen","onClose","TransitionComponent","Transition","AppBar","Toolbar","IconButton","color","onClick","aria-label","Typography","variant","Container","GridList","cellHeight","cols","map","tile","GridListTile","key","alt","GiftListComponent","gifbu","ArduinoIcon","SvgIcon","viewBox","d","ParityList","value","label","theme","padding","spacing","closeButton","right","grey","ArduinoSettingDialog","handleParityChange","handlePortChange","handleBoundRateChange","handleSave","parity","boundRate","comPort","fullWidth","settingOpen","aria-labelledby","DialogTitle","id","DialogContent","List","subheader","ListSubheader","ListItem","ListItemText","secondary","ListItemSecondaryAction","TextField","select","onChange","option","MenuItem","DialogActions","Button","ArduinoSettingDialogComponent","Main","giftListCloseHandle","setState","giftListOpenHandle","arduinoSettingCloseHandle","arduinoSettingOpen","arduinoSettingOpenHandle","changeMessageText","onDoneClick","enqueueSnackbar","style","placeholder","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","Paper","elevation","Fab","MainComponentSnackbar","withSnackbar","MainComponent","App","ThemeProvider","anchorOrigin","vertical","horizontal","CssBaseline","ViewManager","component","View","viewA","name","search","substr","view","Views","undefined","Error","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8cecfa0.chunk.js","sourcesContent":["const ComPorts ={\r\n    COM1 : 1,\r\n    COM2 : 2,\r\n    COM3 : 3,\r\n    COM4 : 4,\r\n    COM5 : 5,\r\n    COM6 : 6,\r\n}\r\n\r\nconst Paritys={\r\n    None : 0,\r\n    Odd : 1,\r\n    Even : 2,\r\n    Mark : 3,\r\n    Space : 4\r\n}\r\n\r\nmodule.exports={\r\n    'ComPorts':ComPorts,\r\n    'Paritys':Paritys,\r\n}","module.exports = __webpack_public_path__ + \"static/media/1.37b22ed7.gif\";","module.exports = __webpack_public_path__ + \"static/media/2.6a727eda.gif\";","module.exports = __webpack_public_path__ + \"static/media/3.2dfc3369.gif\";","module.exports = __webpack_public_path__ + \"static/media/4.97b7ae70.gif\";","module.exports = __webpack_public_path__ + \"static/media/5.55747963.gif\";","module.exports = __webpack_public_path__ + \"static/media/6.1c79ac50.gif\";","module.exports = __webpack_public_path__ + \"static/media/7.6108cb6b.gif\";","module.exports = __webpack_public_path__ + \"static/media/8.255ce978.gif\";","module.exports = __webpack_public_path__ + \"static/media/9.ba068612.gif\";","module.exports = __webpack_public_path__ + \"static/media/10.7b12603e.gif\";","module.exports = __webpack_public_path__ + \"static/media/11.6a39bf07.gif\";","module.exports = __webpack_public_path__ + \"static/media/12.1915c3ae.gif\";","module.exports = __webpack_public_path__ + \"static/media/13.4cd28bd5.gif\";","const edge = window.require('electron-edge-js');\r\nconst isDev = window.require(\"electron-is-dev\");\r\nconst path = window.require('path');\r\nconst fs = window.require('fs');\r\n\r\nconst ArduinoConnect = edge.func({\r\n    assemblyFile: \"Gifbu.dll\",\r\n    typeName: \"Gifbu.Gifbulib\",\r\n    methodName: 'Connect'\r\n});\r\nlet JsonPath = isDev\r\n? \"./data.json\"\r\n: path.join(window.process.execPath, \"../data.json\");\r\n\r\nexport async function ConnectArduino(){\r\n    if(fs.existsSync(JsonPath))\r\n    await ArduinoConnect(JsonPath,function (error, result) {\r\n        if (error) throw error;\r\n        console.log(result);\r\n      });  \r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport {ComPorts,Paritys} from './SerialPortConstants';\r\n\r\nclass ArduinoMachine{\r\n    constructor(\r\n        Id = uuidv4(),\r\n        PortName = \"COM\"+ComPorts.COM3.toString(),\r\n        BaudRate = 9600,\r\n        Parity = Paritys.None\r\n    ){\r\n        this.Id = Id;\r\n        this.PortName = PortName;\r\n        this.BaudRate = BaudRate;\r\n        this.Parity = Parity;\r\n    }\r\n}\r\n\r\nexport default ArduinoMachine;","import ArduinoMachine from '../Models/ArduinoMachineModel';\r\n\r\nclass Gifbu{\r\n    constructor(\r\n        Message = \"\",\r\n        ImagePath = \"\",\r\n        Machine = new ArduinoMachine(), \r\n    ){\r\n        this.Message = Message;\r\n        this.ImagePath = ImagePath;\r\n        this.Machine = Machine;\r\n    }   \r\n}\r\n\r\nexport default Gifbu;","import {\r\n    SELECTED_GIFIMAGE,\r\n    UPDATE_GIFBU_DATA,\r\n    READ_GIFBU_DATA,\r\n    SAVE_GIFBU_DATA\r\n}\r\n\r\nfrom './ReduxActionContants';\r\nimport Gifbu from '../Models/GifbuModel';\r\nimport ArduinoMachine from '../Models/ArduinoMachineModel';\r\n\r\nconst fs = window.require('fs');\r\nconst isDev = window.require(\"electron-is-dev\");\r\nconst path = require('path');\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nlet JsonPath = isDev\r\n? \"./data.json\"\r\n: path.join(window.process.execPath, \"../data.json\");\r\n\r\nlet secretKey = \"hakobako\";\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nasync function saveGifbu(state){\r\n    console.log(\"saveGifbu \"+JsonPath);\r\n\r\n    //data.json şifreliyordum kapattım\r\n    // await fs.writeFile(JsonPath, CryptoJS.AES.encrypt(JSON.stringify(state.Gifbu, null, \"\\t\"),secretKey), async function(err) {\r\n    //   if (err) {\r\n    //       console.log(err);\r\n    //   }\r\n    // }); \r\n    fs.writeFileSync(JsonPath,JSON.stringify(state.Gifbu, null, \"\\t\")) \r\n}\r\n\r\nconst initialState = {\r\n    SelectedGifImage : null,\r\n    Gifbu : new Gifbu(\"\",\"\",new ArduinoMachine())\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch(action.type){\r\n        case SELECTED_GIFIMAGE:{\r\n            return {\r\n                ...state, SelectedGifImage: action.payload\r\n              }\r\n        }\r\n        case UPDATE_GIFBU_DATA:{\r\n            return {...state, Gifbu:action.payload};\r\n        }   \r\n        case READ_GIFBU_DATA:{\r\n            if (!fs.existsSync(JsonPath)) {\r\n                saveGifbu({...state});\r\n                return{...state};\r\n            }\r\n            else{\r\n                let GifbuJsondata = JSON.parse(fs.readFileSync(JsonPath,{encoding:'utf8', flag:'r'}));\r\n                // ArduinoConnect(JSON.stringify(GifbuJsondata),function (error, result) {\r\n                //     if (error) throw error;\r\n                //     console.log(result);\r\n                // });\r\n                return {...state,Gifbu:GifbuJsondata};\r\n            }\r\n        }    \r\n        case SAVE_GIFBU_DATA:{\r\n            saveGifbu({...state});\r\n            return state;\r\n        }         \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","export const SELECTED_GIFIMAGE = \"SELECTED_GIFIMAGE\";\r\nexport const UPDATE_GIFBU_DATA = \"UPDATE_GIFBU_DATA\";\r\nexport const READ_GIFBU_DATA = \"READ_GIFBU_DATA\";\r\nexport const SAVE_GIFBU_DATA = \"SAVE_GIFBU_DATA\";\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./ReduxReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import {\r\n    SELECTED_GIFIMAGE,\r\n    UPDATE_GIFBU_DATA,\r\n    READ_GIFBU_DATA,\r\n    SAVE_GIFBU_DATA\r\n}\r\nfrom './ReduxActionContants';\r\n\r\nexport function selectedGifImage(payload) {\r\n    return { type: SELECTED_GIFIMAGE, payload };\r\n};\r\n\r\nexport function updateGifbuData(payload) {\r\n    return { type: UPDATE_GIFBU_DATA, payload };\r\n};\r\n\r\nexport function readGifbuData(payload) {\r\n    return { type: READ_GIFBU_DATA, payload };\r\n};\r\n\r\nexport function saveGifbuData(payload) {\r\n    return { type: SAVE_GIFBU_DATA, payload };\r\n};","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport \r\n{ \r\n    readGifbuData,\r\n    selectedGifImage,\r\n    updateGifbuData,\r\n    saveGifbuData\r\n} \r\nfrom \"../Redux/ReduxActions\";\r\n\r\nconst useStyles = {\r\n    lvl1:{\r\n        display: \"flex\",\r\n        \r\n    },\r\n    lvl2:{\r\n        flexGrow: \"1\",\r\n        maxWidth: \"100%\",\r\n        overflowX: \"hidden\"\r\n    },\r\n    lvl3:{\r\n        display: \"flex\",\r\n        overflow: \"hidden\",\r\n        transition: \"transform 195ms\",\r\n        minHeight: \"95vh\",\r\n        //alignItems:\"center\"\r\n    },\r\n    paper:{       \r\n        margin : \"50px\", \r\n        width: \"275px\",\r\n        height: \"425px\",\r\n        position: \"absolute\",\r\n        left: \"35%\",\r\n        top: \"35%\",\r\n        transform: \"translate(-35%, -35%)\"\r\n    },\r\n    gifImage:{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    fab: {\r\n        position: \"absolute\",\r\n        top: \"90%\",\r\n        left:\"85%\"\r\n    },\r\n    imageIcon :{\r\n        height : \"50px\",\r\n        width : \"50px\",\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n    }\r\n};\r\n\r\nexport class GifDesktopWindow extends Component {\r\n    componentDidMount=async()=>{\r\n        this.props.readGifbuData();\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    this.props.GifBu.ImagePath === \"\"\r\n                    ? <ImageIcon className={classes.imageIcon}/> \r\n                    : <img className={classes.gifImage} src={this.props.GifBu.ImagePath} />\r\n                }\r\n                <h1>{this.props.GifBu.Message}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        GifBu : state.Gifbu\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        readGifbuData : GifBu => dispatch(readGifbuData(GifBu)),\r\n        selectedGifImage: GifBu => dispatch(selectedGifImage(GifBu)),\r\n        updateGifbuData: GifBu => dispatch(updateGifbuData(GifBu)),\r\n        saveGifbuData: GifBu => dispatch(saveGifbuData(GifBu)),        \r\n    };\r\n}\r\n\r\nconst GifDesktopWindowComponent = withStyles(useStyles)(GifDesktopWindow);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(GifDesktopWindowComponent) ;\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { updateGifbuData} from \"../Redux/ReduxActions\";\r\n\r\nimport image1 from '../Gifs/1.gif';\r\nimport image2 from '../Gifs/2.gif';\r\nimport image3 from '../Gifs/3.gif';\r\nimport image4 from '../Gifs/4.gif';\r\nimport image5 from '../Gifs/5.gif';\r\nimport image6 from '../Gifs/6.gif';\r\nimport image7 from '../Gifs/7.gif';\r\nimport image8 from '../Gifs/8.gif';\r\nimport image9 from '../Gifs/9.gif';\r\nimport image10 from '../Gifs/10.gif';\r\nimport image11 from '../Gifs/11.gif';\r\nimport image12 from '../Gifs/12.gif';\r\nimport image13 from '../Gifs/13.gif';\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root: {\r\n        marginTop : \"50px\",\r\n        flexGrow: 1,\r\n    },\r\n    gridList: {    \r\n        paddingTop:\"10px\",   \r\n        width: \"95%\",\r\n        height: \"100\",\r\n    },\r\n    gridListTile:{\r\n        '&:hover': {\r\n            border: '2px solid '+theme.palette.primary.main,\r\n            zIndex: 1,\r\n            '& $imageBackdrop': {\r\n            opacity: 0.15,\r\n            },\r\n            '& $imageMarked': {\r\n            opacity: 0,\r\n            },\r\n        }\r\n    },\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    dialog: {\r\n        marginTop:\"30px\",\r\n    }\r\n};\r\n\r\nconst tileData = [\r\n    {\r\n        img: image1,\r\n        title: 'Image1',\r\n        author: 'author1',\r\n    },\r\n    {\r\n        img: image2,\r\n        title: 'Image2',\r\n        author: 'author2',\r\n    },\r\n    {\r\n        img: image3,\r\n        title: 'Image3',\r\n        author: 'author3',\r\n    },\r\n    {\r\n        img: image4,\r\n        title: 'Image4',\r\n        author: 'author4',\r\n    },      \r\n    {\r\n        img: image5,\r\n        title: 'Image5',\r\n        author: 'author5',\r\n    },\r\n    {\r\n        img: image6,\r\n        title: 'Image6',\r\n        author: 'author6',\r\n    },\r\n    {\r\n        img: image7,\r\n        title: 'Image7',\r\n        author: 'author7',\r\n    },\r\n    {\r\n        img: image8,\r\n        title: 'Image8',\r\n        author: 'author8',\r\n    },            \r\n    {\r\n        img: image9,\r\n        title: 'Image9',\r\n        author: 'author9',\r\n    },      \r\n    {\r\n        img: image10,\r\n        title: 'Image10',\r\n        author: 'author10',\r\n    },      \r\n    {\r\n        img: image11,\r\n        title: 'Image11',\r\n        author: 'author11',\r\n    },      \r\n    {\r\n        img: image12,\r\n        title: 'Image12',\r\n        author: 'author12',\r\n    },      \r\n    {\r\n        img: image13,\r\n        title: 'Image13',\r\n        author: 'author13',\r\n    },      \r\n                          \r\n];\r\n\r\nexport class GifList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            open:false,\r\n        }\r\n    }\r\n\r\n    onClickImage =(e)=>{\r\n        let GifBu = {...this.props.GifBu};\r\n        GifBu.ImagePath = e.target.src;\r\n        this.props.updateGifbuData(GifBu);\r\n        this.props.close(); \r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Dialog className={classes.dialog} fullScreen open={this.props.gifListOpen} onClose={this.props.close} TransitionComponent={this.Transition}>\r\n                    <AppBar className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={this.props.close} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                GİF RESİM LİSTESİ\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </AppBar>                    \r\n                    <Container maxWidth=\"md\">\r\n                        <GridList cellHeight={300} className={classes.gridList} cols={3}>\r\n                            {tileData.map((tile) => (\r\n                                <GridListTile  className={classes.gridListTile} key={tile.img} cols={tile.cols || 1}>\r\n                                    <img onClick={e=>this.onClickImage(e)} src={tile.img} alt={tile.title} />\r\n                                </GridListTile>                   \r\n                            ))}\r\n                        </GridList>          \r\n                    </Container>       \r\n                </Dialog>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        GifBu : state.Gifbu\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateGifbuData: gifbu => dispatch(updateGifbuData(gifbu))\r\n    };\r\n}\r\n\r\nconst GiftListComponent = withStyles(useStyles)(GifList);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(GiftListComponent) ;\r\n\r\n","import React from 'react';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nexport default function ArduinoIcon(props) {\r\n  return (\r\n    <SvgIcon viewBox =\"0 0 32 32\" {...props}>\r\n        <path d=\"M23.783 23.55c-2.044 0-3.8-.7-5.33-2.1-.95-.87-1.733-1.937-2.454-3.046-.72 1.1-1.504 2.175-2.454 3.046-1.653 1.515-3.547 2.197-5.8 2.087C3.476 23.52 0 20.143 0 15.994c0-4.16 3.495-7.544 7.8-7.544a8.51 8.51 0 0 1 6.05 2.378c.826.77 1.524 1.66 2.16 2.593.636-.933 1.334-1.824 2.16-2.593a8.51 8.51 0 0 1 6.05-2.378c4.296 0 7.8 3.384 7.8 7.544 0 4.148-3.476 7.526-7.755 7.544a9.39 9.39 0 0 1-.462.011zm-6.22-7.656c.853 1.383 1.68 2.67 2.688 3.594 1.138 1.043 2.337 1.472 3.887 1.4l.07-.002c2.827 0 5.128-2.2 5.128-4.88s-2.3-4.88-5.128-4.88a5.88 5.88 0 0 0-4.236 1.665c-.912.848-1.665 1.935-2.408 3.116zM7.8 11.113c-2.827 0-5.128 2.2-5.128 4.88s2.3 4.88 5.128 4.88l.07.002c1.55.082 2.75-.347 3.887-1.4 1.008-.924 1.836-2.2 2.688-3.594-.744-1.18-1.497-2.268-2.408-3.116C10.817 11.63 9.47 11.1 7.8 11.1zm16.762 3.914v-1.444H23.06v1.444h-1.444v1.496h1.444v1.455h1.503v-1.455h1.444v-1.496h-1.444M5.628 15h4.746v1.542H5.628z\"/>\r\n    </SvgIcon>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\nimport { updateGifbuData,saveGifbuData} from \"../Redux/ReduxActions\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nconst ParityList = [\r\n    {\r\n        value: '0',\r\n        label: 'None',\r\n    },\r\n    {\r\n        value: '1',\r\n        label: 'Odd',\r\n    },\r\n    {\r\n        value: '2',\r\n        label: 'Even',\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'Mark',\r\n    },\r\n    {\r\n        value: '4',\r\n        label: 'Space',\r\n    },\r\n];\r\nconst ComPorts = [\r\n{\r\n    value: '1',\r\n    label: 'COM1',\r\n},\r\n{\r\n    value: '2',\r\n    label: 'COM2',\r\n},\r\n{\r\n    value: '3',\r\n    label: 'COM3',\r\n},\r\n{\r\n    value: '4',\r\n    label: 'COM4',\r\n},\r\n{\r\n    value: '5',\r\n    label: 'COM5',\r\n    },\r\n]; \r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n};\r\n\r\nexport class ArduinoSettingDialog extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            parity : \"0\",\r\n            boundRate :\"9600\",\r\n            comPort : \"3\"\r\n        }\r\n    }\r\n\r\n    handleParityChange = (e) => {\r\n        let GifBu = {...this.props.Gifbu};\r\n        GifBu.Machine.Parity = e.target.value;\r\n        this.props.updateGifbuData(GifBu);\r\n    };\r\n    handlePortChange = (e) => {\r\n        let GifBu = {...this.props.Gifbu};\r\n        GifBu.Machine.PortName = e.target.value;\r\n        this.props.updateGifbuData(GifBu);\r\n    };    \r\n    handleBoundRateChange = (e) => {\r\n        let GifBu = {...this.props.Gifbu};\r\n        GifBu.Machine.BaudRate = e.target.value;\r\n        this.props.updateGifbuData(GifBu);\r\n    };  \r\n    handleSave=()=>{\r\n        this.props.saveGifbuData();\r\n        this.props.close();\r\n    }   \r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div>\r\n                <Dialog fullWidth maxWidth=\"sm\" open={this.props.settingOpen} onClose={this.props.close} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Arduino Bağlantı Bilgileri</DialogTitle>\r\n                    <DialogContent>\r\n                        <List subheader={<ListSubheader>Arduino Bağlantı Ayarları</ListSubheader>} className={classes.root}>\r\n                            <ListItem>\r\n                                <ListItemText id=\"switch-list-label-wifi\" secondary=\"Port\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <TextField\r\n                                    id=\"standard-select-currency\"\r\n                                    select\r\n                                    value={this.props.Gifbu.Machine.PortName}\r\n                                    onChange={this.handlePortChange}\r\n                                    >\r\n                                    {ComPorts.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                    ))}\r\n                                    </TextField>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem> \r\n                            <ListItem>\r\n                                <ListItemText id=\"switch-list-label-wifi\" secondary=\"Baud Rate\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <TextField \r\n                                    id=\"standard-basic\"\r\n                                    value={this.props.Gifbu.Machine.BaudRate}\r\n                                    onChange={this.handleBoundRateChange}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>          \r\n                            <ListItem>\r\n                                <ListItemText id=\"switch-list-label-wifi\" secondary=\"Parity\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <TextField\r\n                                    id=\"standard-select-currency\"\r\n                                    select\r\n                                    value={this.props.Gifbu.Machine.Parity}\r\n                                    onChange={this.handleParityChange}\r\n                                    >\r\n                                    {ParityList.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                    ))}\r\n                                    </TextField>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>                 \r\n                        </List>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleSave} color=\"primary\">\r\n                            Değişiklikleri Kaydet\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Gifbu : state.Gifbu\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateGifbuData: gifImage => dispatch(updateGifbuData(gifImage)),\r\n        saveGifbuData: GifBu => dispatch(saveGifbuData(GifBu)),     \r\n    };\r\n}\r\n\r\nconst ArduinoSettingDialogComponent = withStyles(useStyles)(ArduinoSettingDialog);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ArduinoSettingDialogComponent) ;\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\nimport GifList from './GifList';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ArduinoIcon from '../ArduinoSvgIconComponent/ArduinoIcon';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Gifbu from '../Models/GifbuModel';\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport \r\n{ \r\n    readGifbuData,\r\n    selectedGifImage,\r\n    updateGifbuData,\r\n    saveGifbuData\r\n} \r\nfrom \"../Redux/ReduxActions\";\r\nimport ArduinoSettingDialog from './ArduinoSettingDialog';\r\n\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    lvl1:{\r\n        display: \"flex\",\r\n        \r\n    },\r\n    lvl2:{\r\n        flexGrow: \"1\",\r\n        maxWidth: \"100%\",\r\n        overflowX: \"hidden\"\r\n    },\r\n    lvl3:{\r\n        display: \"flex\",\r\n        overflow: \"hidden\",\r\n        transition: \"transform 195ms\",\r\n        minHeight: \"95vh\",\r\n        //alignItems:\"center\"\r\n    },\r\n    paper:{       \r\n        margin : \"50px\", \r\n        width: \"275px\",\r\n        height: \"425px\",\r\n        position: \"absolute\",\r\n        left: \"35%\",\r\n        top: \"35%\",\r\n        transform: \"translate(-35%, -35%)\"\r\n    },\r\n    gifImage:{\r\n        width: \"275px\",\r\n        height: \"425px\",\r\n    },\r\n    fab: {\r\n        position: \"absolute\",\r\n        top: \"90%\",\r\n        left:\"85%\"\r\n    },\r\n    imageIcon :{\r\n        height : \"50px\",\r\n        width : \"50px\",\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n    }\r\n};\r\n\r\nexport class Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            open:false,\r\n            arduinoSettingOpen:false\r\n        }\r\n    }\r\n\r\n    componentDidMount=async()=>{\r\n        this.props.readGifbuData();\r\n    }\r\n\r\n    giftListCloseHandle = () =>{\r\n        this.setState({open:false});\r\n    }\r\n    giftListOpenHandle=()=>{\r\n        this.setState({open:true});\r\n    }\r\n\r\n    arduinoSettingCloseHandle = () =>{\r\n        this.setState({arduinoSettingOpen:false});\r\n    }\r\n    arduinoSettingOpenHandle=()=>{\r\n        this.setState({arduinoSettingOpen:true});\r\n    }    \r\n\r\n    changeMessageText =(e)=>{\r\n        let GifBu = {...this.props.GifBu};\r\n        GifBu.Message = e.target.value;\r\n        this.props.updateGifbuData(GifBu);       \r\n    }\r\n\r\n    onDoneClick=()=> {\r\n        // ArduinoConnect(JSON.stringify(this.props.GifBu),function (error, result) {\r\n        //     if (error) throw error;\r\n        //     console.log(result);\r\n        // });\r\n        this.props.saveGifbuData();      \r\n        \r\n        this.props.enqueueSnackbar(\"Veriler kaydedildi\", { \r\n            variant: 'success',\r\n        });     \r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.lvl1}>\r\n                <div className={classes.lvl2}>                       \r\n                    <div className={classes.lvl3}>  \r\n                        <Container maxWidth=\"md\">\r\n                            <TextField\r\n                                id=\"filled-full-width\"\r\n                                label=\"Gönderilecek Mesaj\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Göndermek istediğin mesajı buraya gir\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                shrink: true,\r\n                                }}\r\n                                variant=\"filled\"\r\n                                InputProps={{\r\n                                    endAdornment: \r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={this.giftListOpenHandle}>                                \r\n                                            <AttachFileIcon /> \r\n                                        </IconButton>\r\n                                        <IconButton onClick={this.arduinoSettingOpenHandle}>                                \r\n                                            <ArduinoIcon /> \r\n                                         </IconButton>\r\n\r\n                                    </InputAdornment>,\r\n                                  }}                                \r\n                                onChange={this.changeMessageText}\r\n                                value ={this.props.GifBu.Message}\r\n                            />    \r\n                            <Paper className={classes.paper} elevation={3}>             \r\n                                {\r\n                                    this.props.GifBu.ImagePath === \"\"\r\n                                    ? <ImageIcon className={classes.imageIcon}/> \r\n                                    : <img className={classes.gifImage} src={this.props.GifBu.ImagePath} />\r\n                                }                                \r\n                                <Fab className={classes.fab} color=\"primary\" aria-label=\"add\">\r\n                                    <DoneIcon onClick={this.onDoneClick} />\r\n                                </Fab>                                \r\n                            </Paper>\r\n                            <GifList gifListOpen={this.state.open} close={this.giftListCloseHandle}></GifList>\r\n                            <ArduinoSettingDialog settingOpen={this.state.arduinoSettingOpen} close={this.arduinoSettingCloseHandle}></ArduinoSettingDialog>\r\n                        </Container>\r\n                    </div>\r\n                </div>          \r\n            </div>              \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        GifBu : state.Gifbu\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        readGifbuData : GifBu => dispatch(readGifbuData(GifBu)),\r\n        selectedGifImage: GifBu => dispatch(selectedGifImage(GifBu)),\r\n        updateGifbuData: GifBu => dispatch(updateGifbuData(GifBu)),\r\n        saveGifbuData: GifBu => dispatch(saveGifbuData(GifBu)),        \r\n    };\r\n}\r\n\r\nconst MainComponentSnackbar = withSnackbar(Main);\r\nconst MainComponent = withStyles(useStyles)(MainComponentSnackbar);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MainComponent) ;\r\n","import React, { Component } from 'react';\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport {createMuiTheme} from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { connect } from \"react-redux\";\r\nimport Main from './Components/Main';\r\nimport { readGifbuData} from \"./Redux/ReduxActions\";\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n const Arduino = require(\"./Arduino\");\r\n Arduino.ConnectArduino();\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <CssBaseline/>\r\n          <Main/>  \r\n        </SnackbarProvider>     \r\n      </ThemeProvider>      \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      GifBu : state.Gifbu\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n  return {\r\n      readGifbuData : GifBu => dispatch(readGifbuData(GifBu)),       \r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App) ;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\"\r\nimport GifDesktopWindow from \"./Components/GifDesktopWindow\";\r\nimport App from './App';\r\n\r\n\r\n//const Window = require(\"./Components/CreateWindow\");\r\n//const WebSocket = require(\"./Socket\")\r\n\r\n//WebSocket.createWebSocketServer();\r\n\r\nclass ViewManager extends Component {\r\n    static Views() {\r\n        return {\r\n            main : <App></App>,\r\n            viewA: <GifDesktopWindow/>,\r\n        }\r\n    }\r\n\r\n    static View(props) {\r\n        let name = props.location.search.substr(1);\r\n        let view = ViewManager.Views()[name];\r\n        if (view == undefined)\r\n            return ViewManager.Views()[\"main\"]\r\n        if(view == null) \r\n            throw new Error(\"View \" + name + \" is undefined\");\r\n        return view;\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Route path=\"/\" component={ViewManager.View}/>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\nexport default ViewManager","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Redux/ReduxStore\";\r\n//import { SnackbarProvider } from 'notistack';\r\nimport ViewManager from \"./ViewManager\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}> \r\n        <ViewManager/>\r\n    </Provider>\r\n    , document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
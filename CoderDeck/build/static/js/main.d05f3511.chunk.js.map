{"version":3,"sources":["Models/SerialPortInfoModel.jsx","Constants/CoderDeckActionConstans.jsx","Redux/KeyButtonsActions.js","Components/Settings.jsx","Components/SideMenu.jsx","Models/BaseActionModel.jsx","Models/HotKeyActionModel.jsx","Models/HotkeySwitchActionModel.jsx","Models/WebSiteActionModel.jsx","Models/OpenFileActionModel.jsx","Models/MultimediaActionModel.jsx","Components/Deck.jsx","Components/HotkeySetting.jsx","Components/HotkeySwitchSetting.jsx","Components/NoneSetting.jsx","Components/WebsiteSetting.jsx","Components/FileOpenSetting.jsx","Components/MultimediaSetting.jsx","Models/KeyButtonModel.jsx","Components/Context.jsx","Components/StatusBar.jsx","Components/Main.jsx","App.js","serviceWorker.js","Redux/KeyButtonsReducer.js","Redux/KeyButtonsStore.js","index.js","Constants/CoderDeckConstants.jsx"],"names":["SerialPort","PortName","ComPorts","COM3","BaudRate","Parity","Paritys","None","this","SELECTED_KEYBUTTON","UPDATE_KEYBUTTON","READ_KEYBUTTONS","UPDATE_MACHINE_STATUS","updateKeyButton","payload","type","updateMachineStatus","ParityList","value","label","edge","window","require","isDev","path","ArduinoConnect","join","process","execPath","func","assemblyFile","typeName","methodName","Settings","props","handleToggle","currentIndex","state","checked","indexOf","newChecked","push","splice","setState","handleParityChange","event","parity","target","handlePortChange","comPort","handleBoundRateChange","boundRate","connectClick","SerialPortInf","JSON","stringify","error","result","console","log","onCloseHandle","classes","Dialog","fullWidth","maxWidth","open","openCloseInfo","onClose","aria-labelledby","DialogTitle","id","DialogContent","List","subheader","ListSubheader","className","root","ListItem","ListItemText","secondary","ListItemSecondaryAction","TextField","select","onChange","map","option","MenuItem","key","DialogActions","Button","onClick","color","Component","SettingsComponent","withStyles","lvl1","flexGrow","flexBasis","flexShrink","borderRight","connect","SelectedKeyButton","dispatch","status","theme","createMuiTheme","useStyles","lvl2","position","nested","paddingLeft","spacing","userbox","display","flexDirection","justifyContent","padding","margin","borderRadius","textAlign","whiteSpace","avatar","width","height","marginLeft","marginRight","marginBottom","menuItemText","chipCloud","flexWrap","setting","right","top","shell","SideMenu","handleClick","SystemMenuOpen","dragStart","e","dataTransfer","setData","dragOver","stopPropagation","settingOpenClick","SettingOpen","settingClose","githubClick","openExternal","linkedinClick","Box","Avatar","src","IconButton","size","style","Divider","button","primary","Collapse","in","timeout","unmountOnExit","component","disablePadding","SystemComponentsKeys","HotKey","draggable","onDragStart","onDragOver","ListItemIcon","SwitchHotkey","WebSite","FileOpen","Multimedia","BaseAction","Id","uuidv4","Name","Position","Image","HotKeyAction","Keys","HotKeySwitchAction","HotKey1","HotKey2","WebSiteAction","Website","OpenFileAction","FilePath","MultimediaAction","MediaAction","MultimediaActions","marginTop","paper","palette","text","border","main","zIndex","opacity","divider","butonBase","_","Deck","componentDidMount","a","async","readKeyButtons","selectedKeyButton","KeyButton1","getComponentTurkce","KeyId","invert","SystemComponentsKeysTurkce","getAction","dropKeyButon1","preventDefault","getData","Key","ActionType","Number","Action","dropKeyButon2","KeyButton2","dropKeyButon3","KeyButton3","dropKeyButon4","KeyButton4","dropKeyButon5","KeyButton5","dropKeyButon6","KeyButton6","dragLeave","dragEnter","getIcon","Fragment","Typography","variant","gutterBottom","Grid","container","item","xs","onDrop","onDragLeave","onDragEnter","ButtonBase","Paper","DeckComponent","keyButton","Refresh","Repeat","HotkeySetting","handlekeydown","document","activeElement","CtrlKey","ctrlKey","AltKey","altKey","ShiftKey","shiftKey","keyCode","toUpperCase","hotkeyAction","repeat","getHotKey","tmphotkeyValue","row","index","hotkeyValue","handlekeyup","KeyButton","getHotKeyValue","changeActionName","addEventListener","Card","card","CardMedia","media","image","title","placeholder","InputLabelProps","shrink","HotkeySettingComponent","maxHeight","minWidth","rounded","HotkeySwitchSetting","hotkeyAction1","hotkeyAction2","getHotKey1Value","getHotKey2Value","hotkeyValue1","hotkeyValue2","HotkeySwitchSettingComponent","NoneSetting","pr","Skeleton","WebsiteSetting","changeWebSiteAddress","WebsiteSettingComponent","FileOpenSetting","changeFilePath","changeFilePathFromIcon","SelectedAction","action","InputProps","endAdornment","InputAdornment","FileObject","FileOpenSettingComponent","MediaButtons","MultimediaSetting","changeActionValue","mediaDiv","MultimediaSettingComponent","Context","getCurrentSetting","deleteCurrentAction","NewKeyButton","Container","ContextComponent","alignItems","paddingTop","overflowX","StatusBar","AppBar","appBar","Toolbar","barInfo","MachineStatus","StatusBarComponent","bottom","minHeight","fontSize","dividerInf","connectedDevicecss","MainPage","lvl3","overflow","transition","App","ThemeProvider","CssBaseline","Main","Boolean","location","hostname","match","fs","initialState","JsonPath","saveKeyButton","KeyButtons","writeFile","err","rootReducer","NewState","data","readFileSync","encoding","flag","parse","Object","assign","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","Next","Back","Start","Stop","Pause","COM1","COM2","COM4","COM5","COM6","Odd","Even","Mark","Space"],"mappings":"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","file":"static/js/main.d05f3511.chunk.js","sourcesContent":["import {ComPorts,Paritys} from '../Constants/CoderDeckConstants';\r\n\r\nclass SerialPort{\r\n    constructor(\r\n        PortName = ComPorts.COM3,\r\n        BaudRate = 9600,\r\n        Parity = Paritys.None,\r\n        Image = \"\",\r\n    ){\r\n        this.PortName = PortName;\r\n        this.BaudRate = BaudRate;\r\n        this.Parity = Parity;\r\n    }\r\n}\r\n\r\nexport default SerialPort;\r\n","export const SELECTED_KEYBUTTON = \"SELECTED_KEYBUTTON\";\r\nexport const UPDATE_KEYBUTTON = \"UPDATE_KEYBUTTON\";\r\nexport const READ_KEYBUTTONS = \"READ_KEYBUTTONS\";\r\nexport const UPDATE_MACHINE_STATUS = \"UPDATE_MACHINE_STATUS\";\r\n","import {\r\n  SELECTED_KEYBUTTON,\r\n  UPDATE_KEYBUTTON,\r\n  READ_KEYBUTTONS,\r\n  UPDATE_MACHINE_STATUS,\r\n}\r\nfrom '../Constants/CoderDeckActionConstans';\r\n\r\nexport function readKeyButtons(payload) {\r\n  return { type: READ_KEYBUTTONS, payload };\r\n};\r\n\r\nexport function selectedKeyButton(payload) {\r\n    return { type: SELECTED_KEYBUTTON, payload };\r\n};\r\n\r\nexport function updateKeyButton(payload) {\r\n  return { type: UPDATE_KEYBUTTON, payload };\r\n};\r\n\r\nexport function updateMachineStatus(payload) {\r\n  return { type: UPDATE_MACHINE_STATUS, payload };\r\n};\r\n","import React, { Component } from 'react';\r\nimport {withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport SerialPort from '../Models/SerialPortInfoModel';\r\nimport { connect } from \"react-redux\";\r\nimport { updateMachineStatus } from \"../Redux/KeyButtonsActions\";\r\n\r\nconst useStyles = {\r\n    lvl1:{\r\n        flexGrow: \"0\",\r\n        flexBasis: \"250px\",\r\n        flexShrink: \"0\",\r\n         borderRight: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n    },\r\n}\r\n\r\nconst ParityList = [\r\n    {\r\n        value: '0',\r\n        label: 'None',\r\n    },\r\n    {\r\n        value: '1',\r\n        label: 'Odd',\r\n    },\r\n    {\r\n        value: '2',\r\n        label: 'Even',\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'Mark',\r\n    },\r\n    {\r\n        value: '4',\r\n        label: 'Space',\r\n    },\r\n];\r\nconst ComPorts = [\r\n{\r\n    value: '1',\r\n    label: 'COM1',\r\n},\r\n{\r\n    value: '2',\r\n    label: 'COM2',\r\n},\r\n{\r\n    value: '3',\r\n    label: 'COM3',\r\n},\r\n{\r\n    value: '4',\r\n    label: 'COM4',\r\n},\r\n{\r\n    value: '5',\r\n    label: 'COM5',\r\n    },\r\n]; \r\n\r\nconst edge = window.require('electron-edge-js');\r\nconst isDev = window.require(\"electron-is-dev\");\r\nconst path = require('path');\r\n\r\nlet Path = isDev\r\n? \"./CoderDeckLib.dll\"\r\n:path.join(window.process.execPath, \"/CoderDeckLib.dll\");\r\n//: `file:///${path.join(__dirname, \"../build/libraries/CoderDeckLib.dll\")}`;\r\n\r\nconst ArduinoConnect = edge.func({\r\n    assemblyFile: \"CoderDeckLib.dll\",\r\n    typeName: \"CoderDeckLib.CoderDeck\",\r\n    methodName: 'Connect'\r\n});\r\n\r\nexport class Settings extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            checked : ['wifi'],\r\n            parity : \"0\",\r\n            boundRate :\"9600\",\r\n            comPort : \"3\"\r\n        }\r\n    }\r\n\r\n    handleToggle = (value) => () => {\r\n        const currentIndex = this.state.checked.indexOf(value);\r\n        const newChecked = [...this.state.checked];\r\n    \r\n        if (currentIndex === -1) {\r\n          newChecked.push(value);\r\n        } else {\r\n          newChecked.splice(currentIndex, 1);\r\n        }\r\n    \r\n        this.setState({checked:newChecked});\r\n    };\r\n\r\n    handleParityChange = (event) => {\r\n        this.setState({parity:event.target.value});\r\n    };\r\n    handlePortChange = (event) => {\r\n        this.setState({comPort:event.target.value});\r\n    };    \r\n    handleBoundRateChange = (event) => {\r\n        this.setState({boundRate:event.target.value});\r\n    };     \r\n\r\n    connectClick=()=>{\r\n        let SerialPortInf = \r\n            new SerialPort(\r\n                \"COM\"+this.state.comPort,\r\n                this.state.boundRate,\r\n                this.state.parity\r\n            );\r\n\r\n        ArduinoConnect(JSON.stringify(SerialPortInf),function (error, result) {\r\n            if (error) throw error;\r\n            console.log(result);\r\n        });\r\n        this.props.updateMachineStatus(\"Cihaz bağlı\");\r\n        this.props.onCloseHandle();\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Dialog fullWidth maxWidth=\"sm\" open={this.props.openCloseInfo} onClose={this.props.onCloseHandle} aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Ayarlar</DialogTitle>\r\n                    <DialogContent>\r\n                        <List subheader={<ListSubheader>Arduino Bağlantı Ayarları</ListSubheader>} className={classes.root}>\r\n                            <ListItem>\r\n                                <ListItemText id=\"switch-list-label-wifi\" secondary=\"Port\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <TextField\r\n                                    id=\"standard-select-currency\"\r\n                                    select\r\n                                    value={this.state.comPort}\r\n                                    onChange={this.handlePortChange}\r\n                                    >\r\n                                    {ComPorts.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                    ))}\r\n                                    </TextField>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem> \r\n                            <ListItem>\r\n                                <ListItemText id=\"switch-list-label-wifi\" secondary=\"Baud Rate\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <TextField \r\n                                    id=\"standard-basic\"\r\n                                    value={this.state.boundRate}\r\n                                    onChange={this.handleBoundRateChange}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>          \r\n                            <ListItem>\r\n                                <ListItemText id=\"switch-list-label-wifi\" secondary=\"Parity\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <TextField\r\n                                    id=\"standard-select-currency\"\r\n                                    select\r\n                                    value={this.state.parity}\r\n                                    onChange={this.handleParityChange}\r\n                                    >\r\n                                    {ParityList.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                    ))}\r\n                                    </TextField>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>                 \r\n                        </List>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.connectClick} color=\"primary\">\r\n                            Bağlan\r\n                        </Button>\r\n                        <Button onClick={this.props.onCloseHandle} color=\"primary\">\r\n                            İptal\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return { SelectedKeyButton: state.SelectedKeyButton };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateMachineStatus: status => dispatch(updateMachineStatus(status))\r\n    };\r\n}\r\nconst SettingsComponent = withStyles(useStyles)(Settings);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SettingsComponent) ;\r\n\r\n","import React, { Component } from 'react';\r\nimport {withStyles, createMuiTheme } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport WebAssetIcon from '@material-ui/icons/WebAsset';\r\nimport TheatersIcon from '@material-ui/icons/Theaters';\r\nimport {SystemComponentsKeys} from '../Constants/CoderDeckConstants';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport Settings from '../Components/Settings';\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    lvl1:{\r\n        flexGrow: \"0\",\r\n        flexBasis: \"250px\",\r\n        flexShrink: \"0\",\r\n         borderRight: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n        // borderTop: \"1px solid #eeeeee\",\r\n    },\r\n    lvl2:{\r\n        position: \"relative\"\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n    userbox:{\r\n        //background: \"#f4f5fd\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        padding: \"1rem\",\r\n        margin: \"0\",\r\n        borderRadius: \"0\",\r\n        textAlign: \"center\",\r\n        whiteSpace: \"nowrap\"\r\n    },\r\n    avatar:{\r\n        width: \"54px\",\r\n        height: \"54px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \".5rem\"\r\n    },\r\n    menuItemText:{\r\n        paddingLeft: \"50px\"\r\n    },\r\n    chipCloud:{\r\n        display: \"flex\",\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n        margin: theme.spacing(0.5),\r\n        },\r\n    },\r\n    setting:{\r\n        position: \"absolute\",\r\n        right: \"1rem\",\r\n        top: \"1rem\"\r\n    }\r\n};\r\n\r\nconst { shell } = window.require('electron');\r\n\r\nexport class SideMenu extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            SystemMenuOpen : false,\r\n            SettingOpen : false\r\n        }\r\n    }\r\n\r\n    handleClick=()=>{\r\n        this.setState({SystemMenuOpen:!this.state.SystemMenuOpen});\r\n    }\r\n\r\n    dragStart=(e)=>{\r\n        const target = e.target;\r\n        e.dataTransfer.setData(\"KeyId\",target.id);\r\n        e.dataTransfer.setData(\"ActionType\",\"System\");\r\n\r\n        // setTimeout(()=>{\r\n        //     target.style.display = \"none\";\r\n        // },0);\r\n    }\r\n\r\n    dragOver =(e)=>{\r\n        e.stopPropagation();\r\n    }\r\n\r\n    settingOpenClick=()=>{\r\n        this.setState({SettingOpen:true})\r\n    }\r\n    settingClose=()=>{\r\n        this.setState({SettingOpen:false})\r\n    }\r\n    githubClick=()=>{\r\n        let link = \"https://github.com/HakanUcaar/\";\r\n        shell.openExternal(link);\r\n    }\r\n    linkedinClick=()=>{\r\n        let link = \"https://www.linkedin.com/in/hakan-u%C3%A7ar-baa718159/\";\r\n        shell.openExternal(link);\r\n    }    \r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (    \r\n            <div className={classes.lvl1}>\r\n                <div className={classes.lvl2}>\r\n                    <Settings openCloseInfo={this.state.SettingOpen} onCloseHandle={this.settingClose}></Settings>\r\n                    <Box className={classes.userbox}>\r\n                        <Avatar className={classes.avatar} src=\"https://api.adorable.io/avatars/285/barista@adorable.pngC\"></Avatar>\r\n                        <IconButton size=\"small\" className={classes.setting} onClick={this.settingOpenClick}>\r\n                            <SettingsIcon></SettingsIcon>\r\n                        </IconButton>\r\n                        <Box>\r\n                            <Box><b>Hakan UÇAR</b></Box>\r\n                            <Box style={{marginBottom:\".5rem\"}}>Software Developer</Box>\r\n                            <Box >\r\n                                <IconButton  size=\"small\" onClick={this.githubClick}> \r\n                                    <GitHubIcon></GitHubIcon>\r\n                                </IconButton>  \r\n                                <IconButton  size=\"small\" onClick={this.linkedinClick}>\r\n                                    <LinkedInIcon></LinkedInIcon>\r\n                                </IconButton>                             \r\n                                \r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Divider></Divider>\r\n                    <ListItem button onClick={this.handleClick}>\r\n                        <ListItemText primary=\"Sistem\" />\r\n                        {this.state.SystemMenuOpen ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={this.state.SystemMenuOpen} timeout=\"auto\" unmountOnExit>\r\n                        <List component=\"div\" disablePadding>\r\n                            <div\r\n                                id = {SystemComponentsKeys.HotKey}\r\n                                draggable=\"true\"\r\n                                onDragStart={this.dragStart}\r\n                                onDragOver={this.dragOver}\r\n                            >\r\n                                <ListItem button className={classes.nested}>\r\n                                    <ListItemIcon>\r\n                                        <KeyboardIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText secondary=\"Kısayol\" />\r\n                                </ListItem>                            \r\n                            </div>\r\n                            <div\r\n                                id = {SystemComponentsKeys.SwitchHotkey}\r\n                                draggable=\"true\"\r\n                                onDragStart={this.dragStart}\r\n                                onDragOver={this.dragOver}\r\n                            >\r\n                                <ListItem button className={classes.nested}>\r\n                                    <ListItemIcon>\r\n                                        <SwapHorizIcon />\r\n                                    </ListItemIcon>                                \r\n                                    <ListItemText secondary=\"Seçmeli Kısayol\" />\r\n                                </ListItem>                             \r\n                            </div>                            \r\n                            <div\r\n                                id = {SystemComponentsKeys.WebSite}\r\n                                draggable=\"true\"\r\n                                onDragStart={this.dragStart}\r\n                                onDragOver={this.dragOver}\r\n                            >\r\n                                <ListItem button className={classes.nested}>\r\n                                    <ListItemIcon>\r\n                                        <LanguageIcon />\r\n                                    </ListItemIcon>                              \r\n                                    <ListItemText secondary=\"WebSite\" />\r\n                                </ListItem>                              \r\n                            </div>\r\n                            <div\r\n                                id = {SystemComponentsKeys.FileOpen}\r\n                                draggable=\"true\"\r\n                                onDragStart={this.dragStart}\r\n                                onDragOver={this.dragOver}\r\n                            >\r\n                                <ListItem button className={classes.nested}>\r\n                                    <ListItemIcon>\r\n                                        <WebAssetIcon />\r\n                                    </ListItemIcon>                              \r\n                                    <ListItemText secondary=\"Aç\" />\r\n                                </ListItem>                             \r\n                            </div>\r\n                            <div\r\n                                id = {SystemComponentsKeys.Multimedia}\r\n                                draggable=\"true\"\r\n                                onDragStart={this.dragStart}\r\n                                onDragOver={this.dragOver}\r\n                            >\r\n                                <ListItem button className={classes.nested}>\r\n                                    <ListItemIcon>\r\n                                        <TheatersIcon />\r\n                                    </ListItemIcon>                              \r\n                                    <ListItemText secondary=\"Multimedya\" />\r\n                                </ListItem>                               \r\n                            </div>                                                                                                                                       \r\n                        </List>\r\n                    </Collapse>                            \r\n                </div>\r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(SideMenu);","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass BaseAction{\r\n    constructor(\r\n        Id = uuidv4(),\r\n        Name = \"\",\r\n        Position = -1,\r\n        Image = \"\",\r\n    ){\r\n        this.Id = Id;\r\n        this.Name = Name;\r\n        this.Position = Position;\r\n        this.Image = Image;\r\n    }\r\n}\r\n\r\nexport default BaseAction;\r\n","import BaseAction from './BaseActionModel';\r\n\r\nclass HotKeyAction extends BaseAction{\r\n    constructor(\r\n        CtrlKey = false,\r\n        AltKey = false,\r\n        Shiftkey = false,\r\n        Keys=[]\r\n    ){\r\n        super();\r\n\r\n        this.Keys = Keys;\r\n    }\r\n}\r\n\r\nexport default HotKeyAction;\r\n","import BaseAction from './BaseActionModel';\r\nimport HotKeyAction from './HotKeyActionModel';\r\n\r\nclass HotKeySwitchAction extends BaseAction{\r\n    constructor(\r\n        HotKey1 = new HotKeyAction(),\r\n        HotKey2 = new HotKeyAction()\r\n    ){\r\n        super();\r\n        this.HotKey1 = HotKey1;\r\n        this.HotKey2 = HotKey2;\r\n    }\r\n}\r\n\r\nexport default HotKeySwitchAction;\r\n","import BaseAction from './BaseActionModel';\r\n\r\nclass WebSiteAction extends BaseAction{\r\n    constructor(\r\n        Website = \"\"\r\n    ){\r\n        super();\r\n\r\n        this.Website = Website;\r\n    }\r\n}\r\n\r\nexport default WebSiteAction;\r\n","import BaseAction from './BaseActionModel';\r\n\r\nclass OpenFileAction extends BaseAction{\r\n    constructor(\r\n        FilePath = \"\"\r\n    ){\r\n        super();\r\n\r\n        this.FilePath = FilePath;\r\n    }\r\n}\r\n\r\nexport default OpenFileAction;\r\n","import BaseAction from './BaseActionModel';\r\nimport MultimediaActions from '../Constants/CoderDeckConstants';\r\n\r\nclass MultimediaAction extends BaseAction{\r\n    constructor(\r\n        MediaAction = MultimediaActions\r\n    ){\r\n        super();\r\n\r\n        this.MediaAction = MediaAction;\r\n    }\r\n}\r\n\r\nexport default MultimediaAction;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport WebAssetIcon from '@material-ui/icons/WebAsset';\r\nimport TheatersIcon from '@material-ui/icons/Theaters';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {SystemComponentsKeys,SystemComponentsKeysTurkce} from '../Constants/CoderDeckConstants';\r\nimport HotKeyAction from '../Models/HotKeyActionModel';\r\nimport HotKeySwitchAction from '../Models/HotkeySwitchActionModel';\r\nimport WebSiteAction from '../Models/WebSiteActionModel';\r\nimport OpenFileAction from '../Models/OpenFileActionModel';\r\nimport MultimediaAction from '../Models/MultimediaActionModel';\r\n\r\nimport \r\n{ \r\n    selectedKeyButton,\r\n    updateKeyButton,\r\n    readKeyButtons,\r\n} \r\nfrom \"../Redux/KeyButtonsActions\";\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root: {\r\n        marginTop : \"50px\",\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      height : \"100px\",\r\n      width :\"100%\",\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n      '&:hover': {\r\n            border: '2px solid '+theme.palette.primary.main,\r\n            zIndex: 1,\r\n            '& $imageBackdrop': {\r\n            opacity: 0.15,\r\n            },\r\n            '& $imageMarked': {\r\n            opacity: 0,\r\n            },\r\n        }\r\n    },\r\n    divider :{\r\n        marginTop : \"10px\"\r\n    },\r\n    butonBase:{\r\n        width:\"100%\",\r\n        display:\"inline-block\",\r\n\r\n    }\r\n  };\r\n\r\nconst _ = require(\"underscore\");\r\n\r\nexport class Deck extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentDidMount=async ()=>{\r\n        this.props.readKeyButtons();\r\n        this.props.selectedKeyButton(this.props.KeyButton1);\r\n    }\r\n\r\n    getComponentTurkce=(KeyId)=>{\r\n        return (_.invert(SystemComponentsKeysTurkce))[KeyId];\r\n    }\r\n\r\n    getAction=(KeyId)=>{\r\n        switch (KeyId){\r\n            case 1: return new HotKeyAction();\r\n            case 2: return new HotKeySwitchAction();\r\n            case 3: return new WebSiteAction();              \r\n            case 4: return new OpenFileAction();               \r\n            case 5: return new MultimediaAction();\r\n            default: return \"\";\r\n        }\r\n    }\r\n    dropKeyButon1 = (e) =>{\r\n        e.preventDefault();\r\n        let KeyId = e.dataTransfer.getData(\"KeyId\");\r\n        let Key = {...this.props.KeyButton1}\r\n        Key.Name = (_.invert(SystemComponentsKeys))[KeyId];\r\n        Key.ActionType = Number(KeyId);\r\n        Key.Action = this.getAction(Number(KeyId));\r\n        this.props.updateKeyButton(Key);\r\n    }\r\n    dropKeyButon2 = (e) =>{\r\n        e.preventDefault();\r\n        let KeyId = e.dataTransfer.getData(\"KeyId\");\r\n        let Key =  {...this.props.KeyButton2}\r\n        Key.Name = (_.invert(SystemComponentsKeys))[KeyId];\r\n        Key.ActionType = Number(KeyId);\r\n        Key.Action = this.getAction(Number(KeyId));  \r\n        this.props.updateKeyButton(Key);\r\n    }  \r\n    dropKeyButon3 = (e) =>{\r\n        e.preventDefault();\r\n        let KeyId = e.dataTransfer.getData(\"KeyId\");\r\n        let Key =  {...this.props.KeyButton3}\r\n        Key.Name = (_.invert(SystemComponentsKeys))[KeyId];\r\n        Key.ActionType = Number(KeyId);\r\n        Key.Action = this.getAction(Number(KeyId));        \r\n        this.props.updateKeyButton(Key);\r\n    }\r\n    dropKeyButon4 = (e) =>{\r\n        e.preventDefault();\r\n        let KeyId = e.dataTransfer.getData(\"KeyId\");\r\n        let Key =  {...this.props.KeyButton4}\r\n        Key.Name = (_.invert(SystemComponentsKeys))[KeyId];\r\n        Key.ActionType = Number(KeyId);\r\n        Key.Action = this.getAction(Number(KeyId));        \r\n        this.props.updateKeyButton(Key);\r\n    }\r\n    dropKeyButon5 = (e) =>{\r\n        e.preventDefault();\r\n        let KeyId = e.dataTransfer.getData(\"KeyId\");\r\n        let Key =  {...this.props.KeyButton5}\r\n        Key.Name = (_.invert(SystemComponentsKeys))[KeyId];\r\n        Key.ActionType = Number(KeyId);\r\n        Key.Action = this.getAction(Number(KeyId));        \r\n        this.props.updateKeyButton(Key);\r\n    }      \r\n    dropKeyButon6 = (e) =>{\r\n        e.preventDefault();\r\n        let KeyId = e.dataTransfer.getData(\"KeyId\");\r\n        let Key =  {...this.props.KeyButton6}\r\n        Key.Name = (_.invert(SystemComponentsKeys))[KeyId];\r\n        Key.ActionType = Number(KeyId);\r\n        Key.Action = this.getAction(Number(KeyId));        \r\n        this.props.updateKeyButton(Key);\r\n    }               \r\n\r\n    dragOver = (e) =>{\r\n        e.preventDefault();\r\n        //e.target.style.border = '2px solid '+theme.palette.primary.main;\r\n    }\r\n    dragLeave = (e) =>{\r\n        e.preventDefault();\r\n        //e.target.style.border = 'none';\r\n    }\r\n    dragEnter =(e)=>{\r\n        e.preventDefault();\r\n        //e.target.style.border = '2px solid '+theme.palette.primary.main;\r\n    }\r\n\r\n    getIcon=(Key)=>{\r\n        switch (Key.ActionType){\r\n            case 1:\r\n                return (\r\n                    <React.Fragment>                        \r\n                        <KeyboardIcon></KeyboardIcon>                    \r\n                        <Typography variant=\"h6\" gutterBottom>{this.getComponentTurkce(Key.ActionType)}</Typography>\r\n                    </React.Fragment>\r\n                )           \r\n            case 2:\r\n                return (\r\n                    <React.Fragment>\r\n                        <SwapHorizIcon></SwapHorizIcon>                    \r\n                        <Typography variant=\"h6\" gutterBottom>{this.getComponentTurkce(Key.ActionType)}</Typography>\r\n                    </React.Fragment>\r\n                ) \r\n            case 3:\r\n                return (\r\n                    <React.Fragment>                        \r\n                        <LanguageIcon></LanguageIcon>                    \r\n                        <Typography variant=\"h6\" gutterBottom>{this.getComponentTurkce(Key.ActionType)}</Typography>\r\n                    </React.Fragment>\r\n                )                 \r\n            case 4:\r\n                return (\r\n                    <React.Fragment>\r\n                        <WebAssetIcon></WebAssetIcon>                    \r\n                        <Typography variant=\"h6\" gutterBottom>{this.getComponentTurkce(Key.ActionType)}</Typography>                        \r\n                    </React.Fragment>\r\n                )                 \r\n            case 5:\r\n                return (\r\n                    <React.Fragment>\r\n                        <TheatersIcon></TheatersIcon>                    \r\n                        <Typography variant=\"h6\" gutterBottom>{this.getComponentTurkce(Key.ActionType)}</Typography>                        \r\n                    </React.Fragment>\r\n                )                 \r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Grid container spacing={1}>\r\n                    <Grid container item xs={12} spacing={1}>\r\n                        <React.Fragment>\r\n                            <Grid item xs={4}>\r\n                                <div   \r\n                                    onDrop={this.dropKeyButon1}\r\n                                    onDragOver={this.dragOver}\r\n                                    onDragLeave={this.dragLeave}\r\n                                    onDragEnter={this.dragEnter}                                  \r\n                                >\r\n                                    <ButtonBase                                         \r\n                                        className={classes.butonBase} \r\n                                        onClick={(e)=>{\r\n                                            this.props.selectedKeyButton(this.props.KeyButton1); \r\n                                        }}\r\n                                    >\r\n                                        <Paper className={classes.paper}>\r\n                                            {this.getIcon(this.props.KeyButton1)}                                            \r\n                                        </Paper>\r\n                                    </ButtonBase>                                    \r\n                                </div>\r\n                            </Grid>                            \r\n                            <Grid item xs={4}>\r\n                                <div                                     \r\n                                    onDrop={this.dropKeyButon2}\r\n                                    onDragOver={this.dragOver}\r\n                                    onDragLeave={this.dragLeave}\r\n                                    onDragEnter={this.dragEnter}                                                     \r\n                                >\r\n                                    <ButtonBase\r\n                                        className={classes.butonBase}\r\n                                        onClick={(e)=>{\r\n                                            this.props.selectedKeyButton(this.props.KeyButton2); \r\n                                            //this.props.changeSetting(this.state.KeyButton2);\r\n                                        }}\r\n                                    >\r\n                                        <Paper className={classes.paper}>\r\n                                            {this.getIcon(this.props.KeyButton2)}\r\n                                        </Paper>\r\n                                    </ButtonBase>                                    \r\n                                </div>\r\n                            </Grid>  \r\n                            <Grid item xs={4}>\r\n                                <div \r\n                                    id =\"KeyButton3\"\r\n                                    onDrop={this.dropKeyButon3}\r\n                                    onDragOver={this.dragOver}\r\n                                    onDragLeave={this.dragLeave}\r\n                                    onDragEnter={this.dragEnter}                                  \r\n                                >\r\n                                    <ButtonBase \r\n                                        className={classes.butonBase}\r\n                                        onClick={()=>{\r\n                                            this.props.selectedKeyButton(this.props.KeyButton3); \r\n                                            //this.props.changeSetting(this.state.KeyButton3);\r\n                                        }}\r\n                                    >\r\n                                        <Paper className={classes.paper}>\r\n                                            {this.getIcon(this.props.KeyButton3)}\r\n                                        </Paper>\r\n                                    </ButtonBase>                                    \r\n                                </div>\r\n                            </Grid>  \r\n                        </React.Fragment> \r\n                    </Grid>\r\n                    <Grid container item xs={12} spacing={1}>\r\n                        <React.Fragment>\r\n                            <Grid item xs={4}>\r\n                                <div \r\n                                    onDrop={this.dropKeyButon4}\r\n                                    onDragOver={this.dragOver}\r\n                                    onDragLeave={this.dragLeave}\r\n                                    onDragEnter={this.dragEnter}                                   \r\n                                >\r\n                                    <ButtonBase \r\n                                        className={classes.butonBase}\r\n                                        onClick={(e)=>{\r\n                                            this.props.selectedKeyButton(this.props.KeyButton4); \r\n                                            //this.props.changeSetting(this.state.KeyButton4);\r\n                                        }}\r\n                                    >\r\n                                        <Paper className={classes.paper}>\r\n                                        {this.getIcon(this.props.KeyButton4)}\r\n                                        </Paper>\r\n                                    </ButtonBase>                                    \r\n                                </div>\r\n                            </Grid>  \r\n                            <Grid item xs={4}>\r\n                                <div \r\n                                    onDrop={this.dropKeyButon5}\r\n                                    onDragOver={this.dragOver}\r\n                                    onDragLeave={this.dragLeave}\r\n                                    onDragEnter={this.dragEnter}                                  \r\n                                >\r\n                                    <ButtonBase \r\n                                        className={classes.butonBase}\r\n                                        onClick={(e)=>{\r\n                                            this.props.selectedKeyButton(this.props.KeyButton5); \r\n                                            //this.props.changeSetting(this.state.KeyButton5);\r\n                                        }}\r\n                                    >\r\n                                        <Paper className={classes.paper}>\r\n                                            {this.getIcon(this.props.KeyButton5)}\r\n                                        </Paper>\r\n                                    </ButtonBase>                                    \r\n                                </div>\r\n                            </Grid> \r\n                            <Grid item xs={4}>\r\n                                <div \r\n                                    onDrop={this.dropKeyButon6}\r\n                                    onDragOver={this.dragOver}\r\n                                    onDragLeave={this.dragLeave}\r\n                                    onDragEnter={this.dragEnter}                                  \r\n                                >\r\n                                    <ButtonBase \r\n                                        className={classes.butonBase}\r\n                                        onClick={()=>{\r\n                                            this.props.selectedKeyButton(this.props.KeyButton6); \r\n                                            //this.props.changeSetting(this.state.KeyButton6)\r\n                                        }}\r\n                                    >\r\n                                        <Paper className={classes.paper}>\r\n                                            {this.getIcon(this.props.KeyButton6)}\r\n                                        </Paper>\r\n                                    </ButtonBase>                                    \r\n                                </div>\r\n                            </Grid> \r\n                        </React.Fragment>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider className={classes.divider}></Divider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return { \r\n        KeyButton1 : state.KeyButton1,\r\n        KeyButton2 : state.KeyButton2,\r\n        KeyButton3 : state.KeyButton3,\r\n        KeyButton4 : state.KeyButton4,\r\n        KeyButton5 : state.KeyButton5,\r\n        KeyButton6 : state.KeyButton6,\r\n        SelectedKeyButton: state.SelectedKeyButton \r\n    };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        readKeyButtons : keyButton => dispatch(readKeyButtons(keyButton)),\r\n        selectedKeyButton: keyButton => dispatch(selectedKeyButton(keyButton)),\r\n        updateKeyButton: keyButton => dispatch(updateKeyButton(keyButton))      \r\n    };\r\n}\r\n\r\nconst DeckComponent = withStyles(useStyles)(Deck);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeckComponent);\r\n","import React, { Component } from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { connect } from \"react-redux\";\r\nimport { updateKeyButton} from \"../Redux/KeyButtonsActions\";\r\nimport HotKeyAction from \"../Models/HotKeyActionModel\";\r\n\r\nconst useStyles = {\r\n    root:{\r\n        display: 'flex',\r\n        marginTop: \"20px\",        \r\n    },\r\n    card: {\r\n        marginTop: \"8px\",\r\n        maxHeight: 151,\r\n        minWidth: 151,\r\n      },\r\n    rounded: {\r\n        color: '#fff',\r\n        //backgroundColor: green[500],\r\n      },\r\n    media: {\r\n        height: 151,\r\n        width:151\r\n      },\r\n};\r\n\r\nlet Refresh = true;\r\nlet Repeat = 0;\r\n\r\nexport class HotkeySetting extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        window.addEventListener(\"keydown\", this.handlekeydown, true);\r\n        window.addEventListener(\"keyup\", this.handlekeyup, true);\r\n\r\n        this.state={\r\n            hotkeyAction : null,\r\n            hotkeyValue : \"\"\r\n        }\r\n    }\r\n\r\n    handlekeydown=(e)=>{\r\n        if(document.activeElement.id===\"Assinged-Hotkey\")\r\n        {      \r\n            if(Refresh && Repeat===0){\r\n                let Action = new HotKeyAction();\r\n                Action.Name = this.props.SelectedKeyButton.Action.Name;\r\n                Action.CtrlKey = e.ctrlKey;\r\n                Action.AltKey = e.altKey;\r\n                Action.ShiftKey = e.shiftKey;          \r\n    \r\n                if(!(e.keyCode === 16 || e.keyCode === 17 ||  e.keyCode === 16))\r\n                {\r\n                    if(Action.CtrlKey || Action.AltKey || Action.ShiftKey)\r\n                    {\r\n                        Action.Keys.push(e.key.toUpperCase());\r\n                    }\r\n                    else{                    \r\n                        Action.Keys = [e.key.toUpperCase()];\r\n                    }                \r\n                } \r\n                Repeat++;\r\n                this.setState({hotkeyAction:Action});\r\n                //this.getHotKey(Action);  \r\n            }  \r\n            else if(Repeat>0){\r\n                let Action = this.state.hotkeyAction;\r\n                Action.Name = this.props.SelectedKeyButton.Action.Name;\r\n                Action.CtrlKey = e.ctrlKey;\r\n                Action.AltKey = e.altKey;\r\n                Action.ShiftKey = e.shiftKey;          \r\n    \r\n                if(!(e.keyCode === 16 || e.keyCode === 17 ||  e.keyCode === 16 || e.repeat))\r\n                {\r\n                    if(Action.CtrlKey || Action.AltKey || Action.ShiftKey)\r\n                    {\r\n                        Action.Keys.push(e.key.toUpperCase());\r\n                    }\r\n                    else{                    \r\n                        Action.Keys = [e.key.toUpperCase()];\r\n                    }                \r\n                } \r\n                \r\n                this.setState({hotkeyAction:Action});\r\n                //this.getHotKey(Action);  \r\n            }\r\n        }\r\n    }\r\n\r\n    getHotKey=(e)=>{\r\n        let tmphotkeyValue = \"\";\r\n        let HotKeyAction = e;\r\n        if(HotKeyAction.CtrlKey) tmphotkeyValue += \"CTRL + \";\r\n        if(HotKeyAction.AltKey) tmphotkeyValue += \"ALT + \";\r\n        if(HotKeyAction.ShiftKey) tmphotkeyValue += \"SHIFT + \";\r\n\r\n        HotKeyAction.Keys.map((row,index)=>{\r\n            if(index === 0)\r\n            {\r\n                tmphotkeyValue += row;\r\n            }\r\n            else{\r\n                tmphotkeyValue += \" + \"+row;\r\n            }            \r\n        });\r\n        \r\n        console.log(tmphotkeyValue);\r\n        this.setState({hotkeyValue:tmphotkeyValue});\r\n    }\r\n\r\n    handlekeyup=(e)=>{\r\n        if(document.activeElement.id===\"Assinged-Hotkey\")\r\n        {   \r\n            let KeyButton = {...this.props.SelectedKeyButton};           \r\n            KeyButton.Action = this.state.hotkeyAction;\r\n            this.props.updateKeyButton(KeyButton);\r\n\r\n            Refresh = true;\r\n            Repeat = 0;\r\n        }\r\n    }\r\n\r\n    getHotKeyValue=()=>{\r\n        let hotkeyValue = \"\";\r\n        let HotKeyAction = {...this.props.SelectedKeyButton.Action};\r\n        if(HotKeyAction.CtrlKey) hotkeyValue += \"CTRL + \";\r\n        if(HotKeyAction.AltKey) hotkeyValue += \"ALT + \";\r\n        if(HotKeyAction.ShiftKey) hotkeyValue += \"SHIFT + \";\r\n\r\n        HotKeyAction.Keys.map((row,index)=>{\r\n            if(index === 0)\r\n            {\r\n                hotkeyValue += row;\r\n            }\r\n            else{\r\n                hotkeyValue += \" + \"+row;\r\n            }            \r\n        });\r\n        return hotkeyValue;\r\n    }\r\n\r\n    changeActionName =(e)=>{\r\n        let KeyButton = {...this.props.SelectedKeyButton};\r\n        KeyButton.Action.Name = e.target.value;\r\n        this.props.updateKeyButton(KeyButton);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Card className={classes.card}>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://api.adorable.io/avatars/285/abott@adorable.png\"\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                </Card>\r\n                <div >\r\n                    <TextField\r\n                        id=\"filled-full-width\"\r\n                        label=\"Başlık\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Bir başlık girin\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        onChange={this.changeActionName}\r\n                        value={this.props.SelectedKeyButton.Action.Name}                        \r\n                    />\r\n                    <TextField\r\n                        id=\"Assinged-Hotkey\"\r\n                        label=\"Atanan Tuş\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Atanacak tuşlara basın\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        value ={this.getHotKeyValue()}     \r\n                    />                \r\n                </div>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return { SelectedKeyButton: state.SelectedKeyButton };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateKeyButton: keyButton => dispatch(updateKeyButton(keyButton))\r\n    };\r\n}\r\n\r\nconst HotkeySettingComponent = withStyles(useStyles)(HotkeySetting);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HotkeySettingComponent) ;\r\n\r\n","import React, { Component } from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { connect } from \"react-redux\";\r\nimport { updateKeyButton} from \"../Redux/KeyButtonsActions\";\r\nimport HotKeyAction from \"../Models/HotKeyActionModel\";\r\n\r\nconst useStyles = {\r\n    root:{\r\n        display: 'flex',\r\n        marginTop: \"20px\",        \r\n    },\r\n    card: {\r\n        marginTop: \"8px\",\r\n        maxHeight: 151,\r\n        minWidth: 151,\r\n      },\r\n    rounded: {\r\n        color: '#fff',\r\n        //backgroundColor: green[500],\r\n      },\r\n    media: {\r\n        height: 151,\r\n        //width:151\r\n      },\r\n};\r\n\r\nlet Refresh = true;\r\nlet Repeat = 0;\r\n\r\nexport class HotkeySwitchSetting extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        window.addEventListener(\"keydown\", this.handlekeydown, true);\r\n        window.addEventListener(\"keyup\", this.handlekeyup, true);\r\n\r\n        this.state = {\r\n            hotkeyAction1 : null,\r\n            hotkeyAction2 : null,\r\n            hotkeyValue1 : \"\",\r\n            hotkeyValue2 : \"\"\r\n        }\r\n    }\r\n\r\n    handlekeyup=(e)=>{\r\n        if(document.activeElement.id===\"Assinged-Hotkey-1\")\r\n        {   \r\n            let KeyButton = {...this.props.SelectedKeyButton};           \r\n            KeyButton.Action.HotKey1 = this.state.hotkeyAction1;\r\n            this.props.updateKeyButton(KeyButton);\r\n            \r\n            Refresh = true;\r\n            Repeat = 0;\r\n        }\r\n        if(document.activeElement.id===\"Assinged-Hotkey-2\")\r\n        {   \r\n            let KeyButton = {...this.props.SelectedKeyButton};           \r\n            KeyButton.Action.HotKey2 = this.state.hotkeyAction2;\r\n            this.props.updateKeyButton(KeyButton);\r\n            \r\n            Refresh = true;\r\n            Repeat = 0;\r\n        }\r\n    }\r\n\r\n    handlekeydown=(e)=>{    \r\n        if(document.activeElement.id === \"Assinged-Hotkey-1\" || document.activeElement.id===\"Assinged-Hotkey-2\")\r\n        {      \r\n            if(Refresh && Repeat===0){\r\n                let Action = new HotKeyAction();\r\n                Action.Name = document.activeElement.id === \"Assinged-Hotkey-1\" \r\n                    ? this.props.SelectedKeyButton.Action.HotKey1.Name \r\n                    : this.props.SelectedKeyButton.Action.HotKey2.Name;\r\n                Action.CtrlKey = e.ctrlKey;\r\n                Action.AltKey = e.altKey;\r\n                Action.ShiftKey = e.shiftKey;          \r\n    \r\n                if(!(e.keyCode === 16 || e.keyCode === 17 ||  e.keyCode === 16))\r\n                {\r\n                    if(Action.CtrlKey || Action.AltKey || Action.ShiftKey)\r\n                    {\r\n                        Action.Keys.push(e.key.toUpperCase());\r\n                    }\r\n                    else{                    \r\n                        Action.Keys = [e.key.toUpperCase()];\r\n                    }                \r\n                } \r\n                Repeat++;\r\n\r\n                if(document.activeElement.id === \"Assinged-Hotkey-1\" )\r\n                    this.setState({hotkeyAction1:Action})\r\n                else\r\n                    this.setState({hotkeyAction2:Action});\r\n\r\n                 //this.getHotKey(Action);  \r\n            }  \r\n            else if(Repeat>0){\r\n                let Action = document.activeElement.id === \"Assinged-Hotkey-1\" \r\n                    ? this.state.hotkeyAction1\r\n                    : this.state.hotkeyAction2;\r\n                    \r\n                Action.Name = document.activeElement.id === \"Assinged-Hotkey-1\" \r\n                    ? this.props.SelectedKeyButton.Action.HotKey1.Name \r\n                    : this.props.SelectedKeyButton.Action.HotKey2.Name;\r\n\r\n                Action.CtrlKey = e.ctrlKey;\r\n                Action.AltKey = e.altKey;\r\n                Action.ShiftKey = e.shiftKey;          \r\n    \r\n                if(!(e.keyCode === 16 || e.keyCode === 17 ||  e.keyCode === 16 || e.repeat))\r\n                {\r\n                    if(Action.CtrlKey || Action.AltKey || Action.ShiftKey)\r\n                    {\r\n                        Action.Keys.push(e.key.toUpperCase());\r\n                    }\r\n                    else{                    \r\n                        Action.Keys = [e.key.toUpperCase()];\r\n                    }                \r\n                } \r\n\r\n                if(document.activeElement.id === \"Assinged-Hotkey-1\")\r\n                    this.setState({hotkeyAction1:Action})\r\n                else\r\n                    this.setState({hotkeyAction2:Action});               \r\n            }\r\n        }\r\n\r\n        // if(document.activeElement.id === \"Assinged-Hotkey-1\" || document.activeElement.id===\"Assinged-Hotkey-2\")\r\n        // {         \r\n        //     let KeyButton = {...this.props.SelectedKeyButton};  \r\n        //     let Action = document.activeElement.id === \"Assinged-Hotkey-1\" \r\n        //         ? this.props.SelectedKeyButton.HotKey1.Action \r\n        //         : this.props.SelectedKeyButton.HotKey2.Action;\r\n\r\n        //     Action.CtrlKey = e.ctrlKey;\r\n        //     Action.AltKey = e.altKey;\r\n        //     Action.ShiftKey = e.shiftKey;          \r\n    \r\n        //     if(Refresh) \r\n        //     {\r\n        //         Action.Keys = [];\r\n        //         Refresh = false;\r\n        //     }\r\n\r\n        //     if(!(e.keyCode === 16 || e.keyCode === 17 ||  e.keyCode === 16))\r\n        //     {\r\n        //         if(Action.CtrlKey || Action.AltKey || Action.ShiftKey)\r\n        //         {\r\n        //             Action.Keys.push(e.key.toUpperCase());\r\n        //         }\r\n        //         else{                    \r\n        //             Action.Keys = [e.key.toUpperCase()];\r\n        //         }                \r\n        //     }               \r\n        //     this.props.updateKeyButton(KeyButton);  \r\n        // }\r\n    }\r\n\r\n    getHotKey1Value=()=>{\r\n        let hotkeyValue = \"\";\r\n        let HotKeyAction = this.props.SelectedKeyButton.Action.HotKey1;\r\n        if(HotKeyAction.CtrlKey) hotkeyValue += \"CTRL + \";\r\n        if(HotKeyAction.AltKey) hotkeyValue += \"ALT + \";\r\n        if(HotKeyAction.ShiftKey) hotkeyValue += \"SHIFT + \";\r\n\r\n        HotKeyAction.Keys.map((row,index)=>{\r\n            if(index === 0)\r\n            {\r\n                hotkeyValue += row;\r\n            }\r\n            else{\r\n                hotkeyValue += \" + \"+row;\r\n            }            \r\n        });\r\n        \r\n        return hotkeyValue;        \r\n    }\r\n    \r\n    getHotKey2Value=()=>{\r\n        let hotkeyValue = \"\";\r\n        let HotKeyAction = this.props.SelectedKeyButton.Action.HotKey2;\r\n        if(HotKeyAction.CtrlKey) hotkeyValue += \"CTRL + \";\r\n        if(HotKeyAction.AltKey) hotkeyValue += \"ALT + \";\r\n        if(HotKeyAction.ShiftKey) hotkeyValue += \"SHIFT + \";\r\n\r\n        HotKeyAction.Keys.map((row,index)=>{\r\n            if(index === 0)\r\n            {\r\n                hotkeyValue += row;\r\n            }\r\n            else{\r\n                hotkeyValue += \" + \"+row;\r\n            }            \r\n        });\r\n        \r\n        return hotkeyValue; \r\n    }\r\n\r\n    changeActionName =(e)=>{\r\n        let KeyButton = {...this.props.SelectedKeyButton};\r\n        KeyButton.Action.Name = e.target.value;\r\n        this.props.updateKeyButton(KeyButton);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Card className={classes.card}>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://api.adorable.io/avatars/285/hakan@adorable.png\"\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                </Card>\r\n                <div >\r\n                    <TextField\r\n                        id=\"filled-full-width\"\r\n                        label=\"Başlık\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Bir başlık girin\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        onChange={this.changeActionName}\r\n                        value={this.props.SelectedKeyButton.Action.Name}\r\n                    />\r\n                    <TextField\r\n                        id=\"Assinged-Hotkey-1\"\r\n                        label=\"Birinci Atanan Tuş\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Atanacak tuşlara basın\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        value ={this.getHotKey1Value()}   \r\n                    />      \r\n                    <TextField\r\n                        id=\"Assinged-Hotkey-2\"\r\n                        label=\"İkinci Atanan Tuş\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Atanacak tuşlara basın\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        value ={this.getHotKey2Value()}   \r\n                    />                                \r\n                </div>            \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return { SelectedKeyButton: state.SelectedKeyButton };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateKeyButton: keyButton => dispatch(updateKeyButton(keyButton))\r\n    };\r\n}\r\n\r\nconst HotkeySwitchSettingComponent = withStyles(useStyles)(HotkeySwitchSetting);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HotkeySwitchSettingComponent) ;\r\n","import React, { Component } from 'react';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Box from '@material-ui/core/Box';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = {\r\n    root:{\r\n        display: 'flex',\r\n        flexDirection : 'Row',\r\n        marginTop: \"20px\",        \r\n    },\r\n    card: {\r\n        marginTop: \"8px\",\r\n        maxHeight: 151,\r\n        minWidth: 151,\r\n      }\r\n};\r\n\r\nexport class NoneSetting extends Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Box pr={2}>\r\n                <Skeleton variant=\"rect\" width={151} height={151} />\r\n                </Box>\r\n                \r\n                <Box width= {\"100%\"}>\r\n                    <Skeleton variant=\"text\" />               \r\n                    <Skeleton variant=\"text\" width=\"60%\"/>  \r\n                </Box>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(NoneSetting);\r\n\r\n","import React, { Component } from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { connect } from \"react-redux\";\r\nimport \r\n{ \r\n    selectedKeyButton,\r\n    updateKeyButton\r\n} \r\nfrom \"../Redux/KeyButtonsActions\";\r\n\r\nconst useStyles = {\r\n    root:{\r\n        display: 'flex',\r\n        marginTop: \"20px\",        \r\n    },\r\n    card: {\r\n        marginTop: \"8px\",\r\n        maxHeight: 151,\r\n        minWidth: 151,\r\n      },\r\n    rounded: {\r\n        color: '#fff',\r\n        //backgroundColor: green[500],\r\n      },\r\n    media: {\r\n        height: 151,\r\n        width:151\r\n      },\r\n};\r\n\r\nexport class WebsiteSetting extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            //SelectedAction : this.props.action,\r\n        }\r\n    }\r\n    \r\n    changeActionName =(e)=>{\r\n        let KeyButton = {...this.props.SelectedKeyButton};\r\n        KeyButton.Action.Name = e.target.value;\r\n        this.props.updateKeyButton(KeyButton);\r\n    } \r\n\r\n    changeWebSiteAddress=(e)=>{\r\n        let KeyButton = {...this.props.SelectedKeyButton};\r\n        KeyButton.Action.Website = e.target.value;\r\n        this.props.updateKeyButton(KeyButton);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Card className={classes.card}>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://api.adorable.io/avatars/285/hakobako@adorable.png\"\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                </Card>\r\n                <div >\r\n                    <TextField\r\n                        id=\"filled-full-width\"\r\n                        label=\"Başlık\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Bir başlık girin\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        onChange={(e)=>this.changeActionName(e)}\r\n                        value={this.props.SelectedKeyButton.Action.Name}                        \r\n                    />\r\n                    <TextField\r\n                        id=\"filled-full-width\"\r\n                        label=\"Web Sitesi\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Websitesi adresinin girin\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        onChange={(e)=>this.changeWebSiteAddress(e)}\r\n                        value={this.props.SelectedKeyButton.Action.Website}\r\n                    />                \r\n                </div>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return { SelectedKeyButton: state.SelectedKeyButton };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateKeyButton: keyButton => dispatch(updateKeyButton(keyButton))\r\n    };\r\n}\r\n\r\nconst WebsiteSettingComponent = withStyles(useStyles)(WebsiteSetting);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WebsiteSettingComponent) ;\r\n\r\n","import React, { Component } from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { connect } from \"react-redux\";\r\nimport { updateKeyButton} from \"../Redux/KeyButtonsActions\";\r\nimport { FilePicker } from 'react-file-picker';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = {\r\n    root:{\r\n        display: 'flex',\r\n        marginTop: \"20px\",        \r\n    },\r\n    card: {\r\n        marginTop: \"8px\",\r\n        maxHeight: 151,\r\n        minWidth: 151,\r\n      },\r\n    rounded: {\r\n        color: '#fff',\r\n        //backgroundColor: green[500],\r\n      },\r\n    media: {\r\n        height: 151,\r\n        width:151\r\n      },\r\n};\r\n\r\nexport class FileOpenSetting extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            SelectedAction : this.props.action,\r\n        }\r\n    }\r\n\r\n    changeActionName =(e)=>{\r\n        let KeyButton = {...this.props.SelectedKeyButton};\r\n        KeyButton.Action.Name = e.target.value;\r\n        this.props.updateKeyButton(KeyButton);\r\n    } \r\n\r\n    changeFilePath =(e)=>{\r\n        let KeyButton = {...this.props.SelectedKeyButton};\r\n        KeyButton.Action.FilePath = e.target.value;\r\n        this.props.updateKeyButton(KeyButton);  \r\n    }\r\n    changeFilePathFromIcon =(e)=>{\r\n        let KeyButton = {...this.props.SelectedKeyButton};\r\n        KeyButton.Action.FilePath = e.path;\r\n        this.props.updateKeyButton(KeyButton);  \r\n    }    \r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Card className={classes.card}>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://api.adorable.io/avatars/285/cimilcimil@adorable.png\"\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                </Card>\r\n                <div >\r\n                    <TextField\r\n                        id=\"filled-full-width\"\r\n                        label=\"Başlık\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Bir başlık girin\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        onChange={(e)=>this.changeActionName(e)}\r\n                        value={this.props.SelectedKeyButton.Action.Name}                        \r\n                    />\r\n                    <TextField\r\n                        id=\"filled-full-width\"\r\n                        label=\"Dosya Yolu\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Açılacak dosyanın yolunu seçin\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        InputProps={{\r\n                            endAdornment: \r\n                            <InputAdornment position=\"end\">\r\n                                <FilePicker                                \r\n                                onChange={FileObject => this.changeFilePathFromIcon(FileObject)}\r\n                                >\r\n                                    <IconButton>                                \r\n                                        <AttachFileIcon /> \r\n                                    </IconButton>\r\n                                </FilePicker>\r\n                            </InputAdornment>,\r\n                          }}\r\n                        onChange={(e)=>this.changeFilePath(e)}\r\n                        value={this.props.SelectedKeyButton.Action.FilePath} \r\n                    />                                  \r\n                </div>            \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return { SelectedKeyButton: state.SelectedKeyButton };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateKeyButton: keyButton => dispatch(updateKeyButton(keyButton))\r\n    };\r\n}\r\n\r\nconst FileOpenSettingComponent = withStyles(useStyles)(FileOpenSetting);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FileOpenSettingComponent) ;\r\n\r\n","import React, { Component } from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { connect } from \"react-redux\";\r\nimport { updateKeyButton} from \"../Redux/KeyButtonsActions\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nconst useStyles = {\r\n    root:{\r\n        display: 'flex',\r\n        marginTop: \"20px\",        \r\n    },\r\n    card: {\r\n        marginTop: \"8px\",\r\n        maxHeight: 151,\r\n        minWidth: 151,\r\n      },\r\n    rounded: {\r\n        color: '#fff',\r\n        //backgroundColor: green[500],\r\n      },\r\n    media: {\r\n        height: 151,\r\n        width:151\r\n    },\r\n    mediaDiv :{\r\n        width:\"100%\"\r\n    }\r\n};\r\n\r\nconst MediaButtons = [\r\n    {\r\n        value: '1',\r\n        label: 'Next',\r\n    },\r\n    {\r\n        value: '2',\r\n        label: 'Back',\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'Start',\r\n    },\r\n    {\r\n        value: '4',\r\n        label: 'Stop',\r\n    },\r\n    {\r\n        value: '5',\r\n        label: 'Pause',\r\n        },\r\n    ];\r\n\r\nexport class MultimediaSetting extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            //SelectedAction : this.props.action,\r\n        }\r\n    }\r\n\r\n    changeActionName =(e)=>{\r\n        let KeyButton = {...this.props.SelectedKeyButton};\r\n        KeyButton.Action.Name = e.target.value;\r\n        this.props.updateKeyButton(KeyButton);\r\n    }    \r\n\r\n    changeActionValue=(e)=>{\r\n        let KeyButton = {...this.props.SelectedKeyButton};\r\n        KeyButton.Action.MediaAction = e.target.value;\r\n        this.props.updateKeyButton(KeyButton);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Card className={classes.card}>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image=\"https://api.adorable.io/avatars/285/cicikız@adorable.png\"\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                </Card>\r\n                <div className={classes.mediaDiv}>\r\n                    <TextField\r\n                        id=\"filled-full-width\"\r\n                        label=\"Başlık\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Bir başlık girin\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        variant=\"filled\"\r\n                        onChange={this.changeActionName}\r\n                        value={this.props.SelectedKeyButton.Action.Name}                        \r\n                    />\r\n                    <TextField\r\n                        id=\"standard-select-currency\"\r\n                        label=\"Websitesi\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder=\"Websitesi adresinin girin\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        variant=\"filled\"                        \r\n                        select\r\n                        value={this.props.SelectedKeyButton.Action.MediaAction}\r\n                        onChange={this.changeActionValue}\r\n                        >\r\n                        {MediaButtons.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>                                  \r\n                </div>            \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return { SelectedKeyButton: state.SelectedKeyButton };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateKeyButton: keyButton => dispatch(updateKeyButton(keyButton))\r\n    };\r\n}\r\n\r\nconst MultimediaSettingComponent = withStyles(useStyles)(MultimediaSetting);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MultimediaSettingComponent) ;\r\n\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass KeyButton{\r\n    constructor(\r\n        Id = uuidv4(),\r\n        Name = \"\",\r\n        ActionType = -1,\r\n        Action = null\r\n    ){\r\n        this.Id = Id;\r\n        this.Name = Name;\r\n        this.ActionType = ActionType;\r\n        this.Action = Action;\r\n    }\r\n}\r\n\r\nexport default KeyButton;","import React, { Component } from 'react';\r\nimport Deck from \"./Deck\";\r\nimport Container from '@material-ui/core/Container';\r\nimport HotkeySetting from \"./HotkeySetting\";\r\nimport HotkeySwitchSetting from \"./HotkeySwitchSetting\";\r\nimport NoneSetting from \"./NoneSetting\";\r\nimport WebsiteSetting from \"./WebsiteSetting\";\r\nimport FileOpenSetting from \"./FileOpenSetting\";\r\nimport MultimediaSetting from \"./MultimediaSetting\";\r\nimport {Typography } from '@material-ui/core';\r\nimport {withStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { connect } from \"react-redux\";\r\nimport { updateKeyButton} from \"../Redux/KeyButtonsActions\";\r\nimport KeyButton from '../Models/KeyButtonModel';\r\n\r\nconst useStyles = {\r\n    lvl1:{\r\n        display : \"flex\",\r\n        alignItems: \"center\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-between!important\",\r\n        paddingTop : \"10px\"       \r\n    },\r\n    lvl2:{\r\n        flexGrow: \"1\",\r\n        maxWidth: \"100%\",\r\n        overflowX: \"hidden\"\r\n    }\r\n};\r\n\r\nexport class Context extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n\r\n        }\r\n    }\r\n\r\n    getCurrentSetting=()=>{\r\n        switch(this.props.SelectedKeyButton.ActionType){\r\n            case 1:\r\n                return <HotkeySetting></HotkeySetting>\r\n            case 2:\r\n                return <HotkeySwitchSetting></HotkeySwitchSetting>\r\n            case 3:\r\n                return <WebsiteSetting></WebsiteSetting>                \r\n            case 4:\r\n                return <FileOpenSetting></FileOpenSetting>        \r\n            case 5:\r\n                return <MultimediaSetting></MultimediaSetting>                            \r\n            default:\r\n                return <NoneSetting></NoneSetting>\r\n        }  \r\n    }\r\n\r\n    deleteCurrentAction=()=>{\r\n        let NewKeyButton =  new KeyButton(-1,\"\");\r\n        NewKeyButton.Id =  this.props.SelectedKeyButton.Id;\r\n        this.props.updateKeyButton(NewKeyButton);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <Deck ></Deck>\r\n                <div className={classes.lvl1}>\r\n                    <Typography>Sistem : {this.props.SelectedKeyButton.Name}</Typography>\r\n                    <IconButton onClick={this.deleteCurrentAction}>\r\n                        <DeleteIcon></DeleteIcon>\r\n                    </IconButton>                    \r\n                </div>\r\n                {this.getCurrentSetting()}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return { SelectedKeyButton: state.SelectedKeyButton };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch=> {\r\n    return {\r\n        updateKeyButton: keyButton => dispatch(updateKeyButton(keyButton))\r\n    };\r\n}\r\n\r\nconst ContextComponent = withStyles(useStyles)(Context);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContextComponent) ;\r\n\r\n","import React, { Component } from 'react';\r\nimport {withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { updateMachineStatus } from \"../Redux/KeyButtonsActions\";\r\n\r\nconst useStyles = {\r\n    appBar: {\r\n        top: 'auto',\r\n        bottom: 0,\r\n        flexGrow : 1,\r\n        height : \"20px\",\r\n      },\r\n    Toolbar:{\r\n        minHeight:\"20px\",\r\n    },\r\n    barInfo: {\r\n        flexGrow : 1,\r\n        fontSize: \"0.80rem\",\r\n    },\r\n    dividerInf:{\r\n        marginLeft:\"20px\"\r\n    },\r\n    connectedDevicecss:{\r\n        fontSize: \"0.80rem\",\r\n        paddingLeft : \"15px\", \r\n        //justifyContent: \"space-between!important\",\r\n    }\r\n};\r\n\r\nexport class StatusBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            // status : \"Servise bağlı değil\",\r\n            // connectedDevice : \"Yok\", \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div>                \r\n                <AppBar position=\"fixed\"  className={classes.appBar}>\r\n                    <Toolbar className={classes.Toolbar}>\r\n                        <Typography color =\"textSecondary\" className={classes.barInfo}>Cihaz Durumu : {this.props.MachineStatus}</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return { MachineStatus: state.MachineStatus };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateMachineStatus: status => dispatch(updateMachineStatus(status))\r\n    };\r\n}\r\nconst StatusBarComponent = withStyles(useStyles)(StatusBar);\r\nexport default connect(mapStateToProps,mapDispatchToProps)(StatusBarComponent) ;\r\n\r\n\r\n// <Divider orientation=\"vertical\" flexItem className={classes.dividerInf}></Divider>\r\n// <Typography color =\"textSecondary\" className={classes.connectedDevicecss}>Durum : {this.state.status}</Typography>","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '../Components/SideMenu';\r\nimport Context from '../Components/Context';\r\nimport StatusBar from '../Components/StatusBar';\r\n\r\nconst useStyles = {\r\n    lvl1:{\r\n        display: \"flex\",\r\n        \r\n    },\r\n    lvl2:{\r\n        flexGrow: \"1\",\r\n        maxWidth: \"100%\",\r\n        overflowX: \"hidden\"\r\n    },\r\n    lvl3:{\r\n        display: \"flex\",\r\n        overflow: \"hidden\",\r\n        transition: \"transform 195ms\",\r\n        minHeight: \"95vh\"\r\n    }\r\n};\r\n\r\nexport class MainPage extends Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n        \r\n        return (\r\n            <div className={classes.lvl1}>\r\n            <div className={classes.lvl2}>                       \r\n                <div className={classes.lvl3}>                            \r\n                    <Drawer></Drawer>\r\n                    <Context></Context>\r\n                    <StatusBar></StatusBar>\r\n                </div>\r\n            </div>          \r\n        </div>          \r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(MainPage);\r\n","import React, { Component } from 'react';\r\nimport Main from './Components/Main';\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport {createMuiTheme} from \"@material-ui/core\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline/>\r\n        <Main></Main>\r\n      </ThemeProvider>      \r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import KeyButton from '../Models/KeyButtonModel';\r\nimport {\r\n  SELECTED_KEYBUTTON,\r\n  UPDATE_KEYBUTTON,\r\n  READ_KEYBUTTONS,\r\n  UPDATE_MACHINE_STATUS,\r\n}\r\nfrom '../Constants/CoderDeckActionConstans';\r\n\r\nconst path = require('path');\r\nconst FileSaver = require('file-saver');\r\nconst fs = window.require('fs');\r\nconst isDev = window.require(\"electron-is-dev\");\r\n\r\nconst initialState = {\r\n  MachineStatus : \"Cihaz bağlı değil\",\r\n  SelectedKeyButton : new KeyButton(-1),\r\n  KeyButton1 : new KeyButton(1),\r\n  KeyButton2 : new KeyButton(2),\r\n  KeyButton3 : new KeyButton(3),\r\n  KeyButton4 : new KeyButton(4),\r\n  KeyButton5 : new KeyButton(5),\r\n  KeyButton6 : new KeyButton(6),\r\n};\r\n\r\nlet JsonPath = isDev\r\n? \"./KeyButtons.json\"\r\n: path.join(window.process.execPath, \"../KeyButtons.json\");\r\n//: `file:///${path.join(__dirname, \"../build/libraries/KeyButtons.json\")}`;\r\n\r\nfunction saveKeyButton(state){\r\n  let KeyButtons = [];\r\n  KeyButtons.push(state.KeyButton1);\r\n  KeyButtons.push(state.KeyButton2);\r\n  KeyButtons.push(state.KeyButton3);\r\n  KeyButtons.push(state.KeyButton4);\r\n  KeyButtons.push(state.KeyButton5);\r\n  KeyButtons.push(state.KeyButton6);\r\n\r\n  console.log(\"saveKeyButton \"+JsonPath);\r\n  fs.writeFile(JsonPath, JSON.stringify(KeyButtons, null, \"\\t\"), function(err) {\r\n    if (err) {\r\n        console.log(err);\r\n    }\r\n  }); \r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch(action.type){\r\n    case SELECTED_KEYBUTTON:{\r\n        return {\r\n          ...state, SelectedKeyButton: action.payload\r\n        }\r\n    }\r\n    case UPDATE_KEYBUTTON:{\r\n      switch(action.payload.Id){\r\n        case 1:\r\n          {\r\n            let NewState = {...state, KeyButton1:action.payload, SelectedKeyButton:action.payload};\r\n            saveKeyButton(NewState);\r\n            return NewState;\r\n          }          \r\n        case 2:\r\n          {\r\n            let NewState = {...state, KeyButton2:action.payload,SelectedKeyButton:action.payload};\r\n            saveKeyButton(NewState);\r\n            return NewState;\r\n          }          \r\n        case 3:\r\n          {\r\n            let NewState = {...state, KeyButton3:action.payload,SelectedKeyButton:action.payload};\r\n            saveKeyButton(NewState);\r\n            return NewState;\r\n          }           \r\n        case 4:\r\n          {\r\n            let NewState = {...state, KeyButton4:action.payload,SelectedKeyButton:action.payload};\r\n            saveKeyButton(NewState);\r\n            return NewState;\r\n          }           \r\n        case 5:\r\n          {\r\n            let NewState = {...state, KeyButton5:action.payload,SelectedKeyButton:action.payload};\r\n            saveKeyButton(NewState);\r\n            return NewState;\r\n          }            \r\n        case 6:\r\n          {\r\n            let NewState = {...state, KeyButton6:action.payload,SelectedKeyButton:action.payload};\r\n            saveKeyButton(NewState);\r\n            return NewState;\r\n          }          \r\n        default : return \r\n      }\r\n    }         \r\n    case READ_KEYBUTTONS:{\r\n      let NewState = {...state};\r\n      console.log(\"readKeybuttons \"+JsonPath);\r\n      const data = fs.readFileSync(JsonPath,{encoding:'utf8', flag:'r'}); \r\n      JSON.parse(data).map(row=>{\r\n        switch(row.Id){\r\n          case 1:\r\n            {\r\n              Object.assign(NewState.KeyButton1, row);\r\n              break;\r\n            }\r\n          case 2:\r\n            {\r\n              Object.assign(NewState.KeyButton2, row);\r\n              break;\r\n            }              \r\n          case 3:\r\n            {\r\n              Object.assign(NewState.KeyButton3, row);\r\n              break;\r\n            }              \r\n          case 4:\r\n            {\r\n              Object.assign(NewState.KeyButton4, row);                              \r\n              break;\r\n            }              \r\n          case 5:\r\n            {\r\n              Object.assign(NewState.KeyButton5, row);                                            \r\n              break;\r\n            }              \r\n          case 6:\r\n            {\r\n              Object.assign(NewState.KeyButton6, row);                                            \r\n              break;\r\n            }              \r\n          default : break;\r\n        }          \r\n      })\r\n      return NewState;\r\n    }      \r\n    case UPDATE_MACHINE_STATUS:{\r\n      return {\r\n        ...state, MachineStatus: action.payload\r\n      }\r\n  }        \r\n    default: return state;\r\n  }  \r\n};\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./KeyButtonsReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Redux/KeyButtonsStore\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","const SystemComponentsKeys = {\r\n    HotKey : 1,\r\n    SwitchHotkey : 2,\r\n    WebSite : 3,\r\n    FileOpen : 4,\r\n    Multimedia : 5\r\n}\r\n\r\nconst SystemComponentsKeysTurkce = {\r\n    \"Kısayol\" : 1,\r\n    \"Seçimli Kısayol\": 2,\r\n    \"Website\" : 3,\r\n    \"Aç\" : 4,\r\n    \"Multimedya\" : 5\r\n}\r\n\r\nconst MultimediaActions={\r\n    Next : 1,\r\n    Back : 2,\r\n    Start : 3,\r\n    Stop : 4,\r\n    Pause : 5\r\n}\r\n\r\nconst ComPorts ={\r\n    COM1 : 1,\r\n    COM2 : 2,\r\n    COM3 : 3,\r\n    COM4 : 4,\r\n    COM5 : 5,\r\n    COM6 : 6,\r\n}\r\n\r\nconst Paritys={\r\n    None : 0,\r\n    Odd : 1,\r\n    Even : 2,\r\n    Mark : 3,\r\n    Space : 4\r\n}\r\n\r\nmodule.exports={\r\n    'SystemComponentsKeys':SystemComponentsKeys,\r\n    'SystemComponentsKeysTurkce':SystemComponentsKeysTurkce,\r\n    'MultimediaActions':MultimediaActions,\r\n    'ComPorts':ComPorts,\r\n    'Paritys':Paritys,\r\n\r\n}"],"sourceRoot":""}